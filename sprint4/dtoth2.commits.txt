Cell.svelte  (dylan toth on 11/07/2024 at 17:19): <script>
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     export let cell;
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     // Determine the content to display
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     let content = '';
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     $: if (cell.isRevealed) {
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         if (cell.isMine) {
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):             content = 'ðŸ’£';
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         } else if (cell.adjacentMines > 0) {
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):             content = cell.adjacentMines;
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         } else {
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):             content = '';
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         }
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     }
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     // Determine the background color
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     let backgroundColor = '#bdbdbd'; // Default hidden cell color
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     if (cell.isRevealed) {
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         backgroundColor = '#e0e0e0'; // Revealed cell color
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         if (cell.isMine) {
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):             backgroundColor = '#ff4d4d'; // Mine color
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         }
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     } else if (cell.isFlagged) {
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         backgroundColor = '#ffeb3b'; // Flagged cell color
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     }
Cell.svelte  (dylan toth on 11/07/2024 at 17:19): </script>
Cell.svelte  (dylan toth on 11/07/2024 at 17:19): <!-- Cell UI -->
Cell.svelte  (dylan toth on 11/07/2024 at 17:19): <div
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     class="cell"
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     style="background-color: {backgroundColor};"
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     on:click
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     on:contextmenu|preventDefault
Cell.svelte  (dylan toth on 11/07/2024 at 17:19): >
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     {#if cell.isFlagged}
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         <img src="/logo.svg" alt="Flag" class="flag-icon" />
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     {:else if cell.isRevealed}
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         <span>{content}</span>
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     {/if}
Cell.svelte  (dylan toth on 11/07/2024 at 17:19): </div>
Cell.svelte  (dylan toth on 11/07/2024 at 17:19): <style>
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     .cell {
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         width: 30px;
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         height: 30px;
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         border: 1px solid #757575;
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         display: flex;
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         align-items: center;
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         justify-content: center;
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         cursor: pointer;
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         user-select: none;
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         font-weight: bold;
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         font-size: 18px;
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         color: black;
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     }
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     .cell:hover {
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         filter: brightness(90%);
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     }
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     .flag-icon {
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         width: 20px;
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         height: 20px;
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         pointer-events: none; /* Prevent interaction with the icon */
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     }
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     span {
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         pointer-events: none;
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     }
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     /* Responsive Design */
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     @media (max-width: 600px) {
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         .cell {
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):             width: 25px;
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):             height: 25px;
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):             font-size: 16px;
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         }
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         .flag-icon {
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):             width: 15px;
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):             height: 15px;
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):         }
Cell.svelte  (dylan toth on 11/07/2024 at 17:19):     }
Cell.svelte  (dylan toth on 11/07/2024 at 17:19): </style>
+page.svelte (dylan toth on 11/06/2024 at 21:14): <script>
+page.svelte (dylan toth on 11/06/2024 at 21:14):   import { onMount, onDestroy } from 'svelte';
+page.svelte (dylan toth on 11/06/2024 at 21:14):   import { supabase } from '$lib/supabaseClient.js'; // Ensure this path is correct
+page.svelte (dylan toth on 11/06/2024 at 21:14):   import { fly, fade } from 'svelte/transition'; // Importing Svelte transitions for animations
+page.svelte (dylan toth on 11/06/2024 at 21:14):   let user = null;
+page.svelte (dylan toth on 11/06/2024 at 21:14):   let balance = 0;
+page.svelte (dylan toth on 11/06/2024 at 21:14):   let runVinylCount = 0; // Counter for vinyls earned in the current run
+page.svelte (dylan toth on 11/06/2024 at 21:14):   let message = '';
+page.svelte (dylan toth on 11/06/2024 at 21:14):   let isGameOver = false;
+page.svelte (dylan toth on 11/06/2024 at 21:14):   let gameStarted = false; // State to track if the game has started
+page.svelte (dylan toth on 11/06/2024 at 21:14):   let showBonusAnimation = false; // State to control the display of the bonus animation
+page.svelte (dylan toth on 11/06/2024 at 21:14):   // Game Elements
+page.svelte (dylan toth on 11/06/2024 at 21:14):   let bird;
+page.svelte (dylan toth on 11/06/2024 at 21:14):   let gameContainer;
+page.svelte (dylan toth on 11/06/2024 at 21:14):   let ground;
+page.svelte (dylan toth on 11/06/2024 at 21:14):   // Game State Variables
+page.svelte (dylan toth on 11/06/2024 at 21:14):   let birdLeft = 220; // Defined at top level
+page.svelte (dylan toth on 11/06/2024 at 21:14):   let birdBottom = 400; // Updated from 100 to 400 to position bird within the gap
+page.svelte (dylan toth on 11/06/2024 at 21:14):   // Timers
+page.svelte (dylan toth on 11/06/2024 at 21:14):   let gameTimerId;
+page.svelte (dylan toth on 11/06/2024 at 21:14):   let obstacleTimers = []; // Array to track multiple obstacle timers
+page.svelte (dylan toth on 11/06/2024 at 21:14):   let obstacleGeneratorTimerId; // Timer for generating obstacles
+page.svelte (dylan toth on 11/06/2024 at 21:14):   // Constants
+page.svelte (dylan toth on 11/06/2024 at 21:14):   const gravity = 2; // Reduced gravity for smoother gameplay
+page.svelte (dylan toth on 11/06/2024 at 21:14):   const jumpHeight = 50;
+page.svelte (dylan toth on 11/06/2024 at 21:14):   const birdWidth = 65; // Updated width to match CSS
+page.svelte (dylan toth on 11/06/2024 at 21:14):   const birdHeight = 55; // Updated height to match CSS
+page.svelte (dylan toth on 11/06/2024 at 21:14):   const pipeWidth = 60; // Width of the pipes in pixels
+page.svelte (dylan toth on 11/06/2024 at 21:14):   const pipeHeight = 300; // Height of the pipes in pixels
+page.svelte (dylan toth on 11/06/2024 at 21:14):   const gap = 150; // Gap between top and bottom pipes in pixels
+page.svelte (dylan toth on 11/06/2024 at 21:14):   // Sound Effect (Optional)
+page.svelte (dylan toth on 11/06/2024 at 21:14):   let scoreSound;
+page.svelte (dylan toth on 11/06/2024 at 21:14):   // Function to fetch user session and balance
+page.svelte (dylan toth on 11/06/2024 at 21:14):   async function fetchUser() {
+page.svelte (dylan toth on 11/06/2024 at 21:14):       console.log('Fetching user session...');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       const { data: sessionData, error: sessionError } = await supabase.auth.getSession();
+page.svelte (dylan toth on 11/06/2024 at 21:14):       if (sessionError) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):           console.error('Session Error:', sessionError);
+page.svelte (dylan toth on 11/06/2024 at 21:14):           message = 'Error fetching session. Please try again.';
+page.svelte (dylan toth on 11/06/2024 at 21:14):           return;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       }
+page.svelte (dylan toth on 11/06/2024 at 21:14):       user = sessionData?.session?.user;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       console.log('User fetched:', user);
+page.svelte (dylan toth on 11/06/2024 at 21:14):       if (user) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):           console.log(`Fetching vinyl balance for user ID: ${user.id}`);
+page.svelte (dylan toth on 11/06/2024 at 21:14):           // Fetch user's vinyl balance
+page.svelte (dylan toth on 11/06/2024 at 21:14):           const { data, error } = await supabase
+page.svelte (dylan toth on 11/06/2024 at 21:14):               .from('profiles')
+page.svelte (dylan toth on 11/06/2024 at 21:14):               .select('vinyls')
+page.svelte (dylan toth on 11/06/2024 at 21:14):               .eq('id', user.id)
+page.svelte (dylan toth on 11/06/2024 at 21:14):               .single();
+page.svelte (dylan toth on 11/06/2024 at 21:14):           if (error) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):               console.error('Error fetching vinyl balance:', error);
+page.svelte (dylan toth on 11/06/2024 at 21:14):               message = 'Error fetching your balance.';
+page.svelte (dylan toth on 11/06/2024 at 21:14):           } else {
+page.svelte (dylan toth on 11/06/2024 at 21:14):               balance = data.vinyls ?? 0;
+page.svelte (dylan toth on 11/06/2024 at 21:14):               console.log(`User balance fetched: ${balance} Vinyls`);
+page.svelte (dylan toth on 11/06/2024 at 21:14):           }
+page.svelte (dylan toth on 11/06/2024 at 21:14):           // Attempt to give daily bonus
+page.svelte (dylan toth on 11/06/2024 at 21:14):           await giveDailyBonus();
+page.svelte (dylan toth on 11/06/2024 at 21:14):       } else {
+page.svelte (dylan toth on 11/06/2024 at 21:14):           message = 'Please log in to play the game.';
+page.svelte (dylan toth on 11/06/2024 at 21:14):           console.log('No user logged in.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   // Function to update vinyl balance in the database
+page.svelte (dylan toth on 11/06/2024 at 21:14):   async function updateBalance(newBalance) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):       if (!user) return;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       console.log(`Updating vinyl balance to ${newBalance} for user ID: ${user.id}`);
+page.svelte (dylan toth on 11/06/2024 at 21:14):       const { error } = await supabase
+page.svelte (dylan toth on 11/06/2024 at 21:14):           .from('profiles')
+page.svelte (dylan toth on 11/06/2024 at 21:14):           .update({ vinyls: newBalance })
+page.svelte (dylan toth on 11/06/2024 at 21:14):           .eq('id', user.id);
+page.svelte (dylan toth on 11/06/2024 at 21:14):       if (error) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):           console.error('Error updating vinyl balance:', error);
+page.svelte (dylan toth on 11/06/2024 at 21:14):           message = 'Error updating balance. Please try again.';
+page.svelte (dylan toth on 11/06/2024 at 21:14):       } else {
+page.svelte (dylan toth on 11/06/2024 at 21:14):           console.log('Vinyl balance updated successfully.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   // Function to award a vinyl
+page.svelte (dylan toth on 11/06/2024 at 21:14):   async function awardVinyl() {
+page.svelte (dylan toth on 11/06/2024 at 21:14):       if (!user) return;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       balance += 1;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       runVinylCount += 1; // Increment the running vinyl counter
+page.svelte (dylan toth on 11/06/2024 at 21:14):       console.log(`Awarding 1 Vinyl. New balance: ${balance}. Vinyls earned this run: ${runVinylCount}`);
+page.svelte (dylan toth on 11/06/2024 at 21:14):       await updateBalance(balance);
+page.svelte (dylan toth on 11/06/2024 at 21:14):       message = 'You earned 1 Vinyl!';
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   // Function to give daily bonus
+page.svelte (dylan toth on 11/06/2024 at 21:14):   async function giveDailyBonus() {
+page.svelte (dylan toth on 11/06/2024 at 21:14):       console.log('Attempting to give daily bonus...');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       const { data, error } = await supabase
+page.svelte (dylan toth on 11/06/2024 at 21:14):           .rpc('give_daily_bonus', { user_id: user.id });
+page.svelte (dylan toth on 11/06/2024 at 21:14):       if (error) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):           console.error('Error giving daily bonus:', error);
+page.svelte (dylan toth on 11/06/2024 at 21:14):           return;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       }
+page.svelte (dylan toth on 11/06/2024 at 21:14):       if (data) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):           console.log('Daily bonus awarded!');
+page.svelte (dylan toth on 11/06/2024 at 21:14):           // Show bonus animation
+page.svelte (dylan toth on 11/06/2024 at 21:14):           showBonusAnimation = true;
+page.svelte (dylan toth on 11/06/2024 at 21:14):           // Optionally, you can update the balance directly if needed
+page.svelte (dylan toth on 11/06/2024 at 21:14):           // balance += 100;
+page.svelte (dylan toth on 11/06/2024 at 21:14):           // runVinylCount += 100;
+page.svelte (dylan toth on 11/06/2024 at 21:14):           // message = 'You earned 100 Vinyls!';
+page.svelte (dylan toth on 11/06/2024 at 21:14):       } else {
+page.svelte (dylan toth on 11/06/2024 at 21:14):           console.log('Daily bonus already claimed today.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       }
+page.svelte (dylan toth on 11/06/2024 at 21:14):       // Refresh the balance display after attempting to give the bonus
+page.svelte (dylan toth on 11/06/2024 at 21:14):       await fetchBalance();
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   // Function to fetch the latest balance
+page.svelte (dylan toth on 11/06/2024 at 21:14):   async function fetchBalance() {
+page.svelte (dylan toth on 11/06/2024 at 21:14):       if (!user) return;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       console.log(`Fetching updated vinyl balance for user ID: ${user.id}`);
+page.svelte (dylan toth on 11/06/2024 at 21:14):       const { data, error } = await supabase
+page.svelte (dylan toth on 11/06/2024 at 21:14):           .from('profiles')
+page.svelte (dylan toth on 11/06/2024 at 21:14):           .select('vinyls')
+page.svelte (dylan toth on 11/06/2024 at 21:14):           .eq('id', user.id)
+page.svelte (dylan toth on 11/06/2024 at 21:14):           .single();
+page.svelte (dylan toth on 11/06/2024 at 21:14):       if (error) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):           console.error('Error fetching updated vinyl balance:', error);
+page.svelte (dylan toth on 11/06/2024 at 21:14):           message = 'Error fetching your balance.';
+page.svelte (dylan toth on 11/06/2024 at 21:14):       } else {
+page.svelte (dylan toth on 11/06/2024 at 21:14):           balance = data.vinyls ?? 0;
+page.svelte (dylan toth on 11/06/2024 at 21:14):           console.log(`Updated balance fetched: ${balance} Vinyls`);
+page.svelte (dylan toth on 11/06/2024 at 21:14):       }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   // Function to start the game loop
+page.svelte (dylan toth on 11/06/2024 at 21:14):   function startGameLoop() {
+page.svelte (dylan toth on 11/06/2024 at 21:14):       if (isGameOver) return;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       birdBottom -= gravity;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       bird.style.bottom = birdBottom + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):       bird.style.left = birdLeft + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):       // console.log(`Bird position - Left: ${birdLeft}, Bottom: ${birdBottom}`);
+page.svelte (dylan toth on 11/06/2024 at 21:14):       if (birdBottom <= 0) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):           console.log('Bird has hit the ground.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):           gameOver();
+page.svelte (dylan toth on 11/06/2024 at 21:14):       }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   // Jump control
+page.svelte (dylan toth on 11/06/2024 at 21:14):   function control(e) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):       if (e.key === ' ' || e.code === 'Space') {
+page.svelte (dylan toth on 11/06/2024 at 21:14):           e.preventDefault(); // Prevent page from scrolling
+page.svelte (dylan toth on 11/06/2024 at 21:14):           jump();
+page.svelte (dylan toth on 11/06/2024 at 21:14):       }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   function jump() {
+page.svelte (dylan toth on 11/06/2024 at 21:14):       if (isGameOver) return;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       if (birdBottom < (gameContainer.clientHeight - ground.clientHeight) - birdHeight) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):           birdBottom += jumpHeight;
+page.svelte (dylan toth on 11/06/2024 at 21:14):           bird.style.bottom = birdBottom + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):           console.log(`Bird jumped to position - Bottom: ${birdBottom}`);
+page.svelte (dylan toth on 11/06/2024 at 21:14):           // Optionally play sound on jump
+page.svelte (dylan toth on 11/06/2024 at 21:14):           if (scoreSound) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):               scoreSound.currentTime = 0;
+page.svelte (dylan toth on 11/06/2024 at 21:14):               scoreSound.play();
+page.svelte (dylan toth on 11/06/2024 at 21:14):               console.log('Jump sound played.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):           }
+page.svelte (dylan toth on 11/06/2024 at 21:14):       } else {
+page.svelte (dylan toth on 11/06/2024 at 21:14):           console.log('Jump ignored: Bird is at maximum height.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   // Function to generate obstacles
+page.svelte (dylan toth on 11/06/2024 at 21:14):   function generateObstacle() {
+page.svelte (dylan toth on 11/06/2024 at 21:14):       if (isGameOver) return;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       let obstacleLeft = gameContainer.clientWidth;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       const pipeWidthLocal = pipeWidth; // Use global constant
+page.svelte (dylan toth on 11/06/2024 at 21:14):       const pipeHeightLocal = pipeHeight; // Use global constant
+page.svelte (dylan toth on 11/06/2024 at 21:14):       // Ensure obstacleBottom is set to prevent immediate collision
+page.svelte (dylan toth on 11/06/2024 at 21:14):       const minObstacleBottom = 200; // Minimum height to ensure space for the bird
+page.svelte (dylan toth on 11/06/2024 at 21:14):       const maxObstacleBottom = gameContainer.clientHeight - ground.clientHeight - pipeHeightLocal - gap - minObstacleBottom;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       const obstacleBottom = minObstacleBottom + Math.random() * maxObstacleBottom;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       const obstacleTop = obstacleBottom + pipeHeightLocal + gap;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       console.log(`Generating new obstacles at left: ${obstacleLeft}, bottom: ${obstacleBottom}`);
+page.svelte (dylan toth on 11/06/2024 at 21:14):       const obstacle = document.createElement('div');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       const topObstacle = document.createElement('div');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       obstacle.classList.add('obstacle');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       topObstacle.classList.add('topObstacle');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       // Initialize obstacle as not passed
+page.svelte (dylan toth on 11/06/2024 at 21:14):       obstacle.dataset.passed = 'false';
+page.svelte (dylan toth on 11/06/2024 at 21:14):       topObstacle.dataset.passed = 'false';
+page.svelte (dylan toth on 11/06/2024 at 21:14):       gameContainer.appendChild(obstacle);
+page.svelte (dylan toth on 11/06/2024 at 21:14):       gameContainer.appendChild(topObstacle);
+page.svelte (dylan toth on 11/06/2024 at 21:14):       obstacle.style.left = obstacleLeft + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):       topObstacle.style.left = obstacleLeft + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):       obstacle.style.bottom = obstacleBottom + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):       topObstacle.style.bottom = (obstacleBottom + pipeHeightLocal + gap) + 'px'; // Position top obstacle from bottom
+page.svelte (dylan toth on 11/06/2024 at 21:14):       console.log(`Obstacle positioned at Left: ${obstacleLeft}, Bottom: ${obstacleBottom}`);
+page.svelte (dylan toth on 11/06/2024 at 21:14):       console.log(`Top Obstacle positioned at Left: ${obstacleLeft}, Bottom: ${obstacleBottom + pipeHeightLocal + gap}`);
+page.svelte (dylan toth on 11/06/2024 at 21:14):       // Move obstacles
+page.svelte (dylan toth on 11/06/2024 at 21:14):       function moveObstacle() {
+page.svelte (dylan toth on 11/06/2024 at 21:14):           if (isGameOver) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):               console.log('Game is over. Stopping obstacle movement.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):               clearInterval(timerId);
+page.svelte (dylan toth on 11/06/2024 at 21:14):               return;
+page.svelte (dylan toth on 11/06/2024 at 21:14):           }
+page.svelte (dylan toth on 11/06/2024 at 21:14):           obstacleLeft -= 2;
+page.svelte (dylan toth on 11/06/2024 at 21:14):           obstacle.style.left = obstacleLeft + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):           topObstacle.style.left = obstacleLeft + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):           // Award vinyl if obstacle passes the bird
+page.svelte (dylan toth on 11/06/2024 at 21:14):           if (
+page.svelte (dylan toth on 11/06/2024 at 21:14):               obstacleLeft + pipeWidthLocal < birdLeft &&
+page.svelte (dylan toth on 11/06/2024 at 21:14):               obstacle.dataset.passed === 'false'
+page.svelte (dylan toth on 11/06/2024 at 21:14):           ) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):               obstacle.dataset.passed = 'true';
+page.svelte (dylan toth on 11/06/2024 at 21:14):               topObstacle.dataset.passed = 'true';
+page.svelte (dylan toth on 11/06/2024 at 21:14):               console.log('Obstacle passed the bird. Awarding vinyl.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):               awardVinyl();
+page.svelte (dylan toth on 11/06/2024 at 21:14):           }
+page.svelte (dylan toth on 11/06/2024 at 21:14):           // Collision detection
+page.svelte (dylan toth on 11/06/2024 at 21:14):           // Calculate relative positions
+page.svelte (dylan toth on 11/06/2024 at 21:14):           const birdRight = birdLeft + birdWidth;
+page.svelte (dylan toth on 11/06/2024 at 21:14):           const birdTop = birdBottom + birdHeight;
+page.svelte (dylan toth on 11/06/2024 at 21:14):           // Check if obstacle is overlapping horizontally with the bird
+page.svelte (dylan toth on 11/06/2024 at 21:14):           if (obstacleLeft < birdRight && obstacleLeft + pipeWidthLocal > birdLeft) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):               console.log('Obstacle is horizontally overlapping with the bird.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):               // Check collision with bottom obstacle
+page.svelte (dylan toth on 11/06/2024 at 21:14):               if (birdBottom < obstacleBottom + pipeHeightLocal) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):                   console.log('Bird has collided with the bottom obstacle.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):                   gameOver();
+page.svelte (dylan toth on 11/06/2024 at 21:14):                   clearInterval(timerId);
+page.svelte (dylan toth on 11/06/2024 at 21:14):               }
+page.svelte (dylan toth on 11/06/2024 at 21:14):               // Check collision with top obstacle
+page.svelte (dylan toth on 11/06/2024 at 21:14):               if (birdTop > obstacleBottom + pipeHeightLocal + gap) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):                   console.log('Bird has collided with the top obstacle.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):                   gameOver();
+page.svelte (dylan toth on 11/06/2024 at 21:14):                   clearInterval(timerId);
+page.svelte (dylan toth on 11/06/2024 at 21:14):               }
+page.svelte (dylan toth on 11/06/2024 at 21:14):           }
+page.svelte (dylan toth on 11/06/2024 at 21:14):           // Remove obstacles that have moved off screen
+page.svelte (dylan toth on 11/06/2024 at 21:14):           if (obstacleLeft < -pipeWidthLocal) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):               console.log('Obstacle has moved off screen. Removing obstacles.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):               clearInterval(timerId);
+page.svelte (dylan toth on 11/06/2024 at 21:14):               gameContainer.removeChild(obstacle);
+page.svelte (dylan toth on 11/06/2024 at 21:14):               gameContainer.removeChild(topObstacle);
+page.svelte (dylan toth on 11/06/2024 at 21:14):           }
+page.svelte (dylan toth on 11/06/2024 at 21:14):       }
+page.svelte (dylan toth on 11/06/2024 at 21:14):       let timerId = setInterval(moveObstacle, 20);
+page.svelte (dylan toth on 11/06/2024 at 21:14):       obstacleTimers.push(timerId);
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   // Function to start generating obstacles at intervals
+page.svelte (dylan toth on 11/06/2024 at 21:14):   function startObstacleGenerator() {
+page.svelte (dylan toth on 11/06/2024 at 21:14):       console.log('Starting obstacle generator.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       obstacleGeneratorTimerId = setInterval(() => {
+page.svelte (dylan toth on 11/06/2024 at 21:14):           if (!isGameOver) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):               generateObstacle();
+page.svelte (dylan toth on 11/06/2024 at 21:14):           }
+page.svelte (dylan toth on 11/06/2024 at 21:14):       }, 3000);
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   // Function to stop generating obstacles
+page.svelte (dylan toth on 11/06/2024 at 21:14):   function stopObstacleGenerator() {
+page.svelte (dylan toth on 11/06/2024 at 21:14):       if (obstacleGeneratorTimerId) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):           console.log('Stopping obstacle generator.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):           clearInterval(obstacleGeneratorTimerId);
+page.svelte (dylan toth on 11/06/2024 at 21:14):       }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   // Function to start the game
+page.svelte (dylan toth on 11/06/2024 at 21:14):   function startGame() {
+page.svelte (dylan toth on 11/06/2024 at 21:14):       if (gameStarted) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):           console.log('Game already started.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):           return;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       }
+page.svelte (dylan toth on 11/06/2024 at 21:14):       // Reset game state if game was over
+page.svelte (dylan toth on 11/06/2024 at 21:14):       if (isGameOver) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):           console.log('Restarting game.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):           isGameOver = false;
+page.svelte (dylan toth on 11/06/2024 at 21:14):           message = '';
+page.svelte (dylan toth on 11/06/2024 at 21:14):           // Reset bird position to within the gap
+page.svelte (dylan toth on 11/06/2024 at 21:14):           birdLeft = 220;
+page.svelte (dylan toth on 11/06/2024 at 21:14):           birdBottom = 400; // Updated from 100 to 400
+page.svelte (dylan toth on 11/06/2024 at 21:14):           bird.style.left = birdLeft + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):           bird.style.bottom = birdBottom + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):           console.log(`Bird position reset to Left: ${birdLeft}, Bottom: ${birdBottom}`);
+page.svelte (dylan toth on 11/06/2024 at 21:14):           // Remove existing obstacles
+page.svelte (dylan toth on 11/06/2024 at 21:14):           const obstacles = gameContainer.querySelectorAll('.obstacle, .topObstacle');
+page.svelte (dylan toth on 11/06/2024 at 21:14):           obstacles.forEach(obstacle => {
+page.svelte (dylan toth on 11/06/2024 at 21:14):               console.log('Removing existing obstacle:', obstacle);
+page.svelte (dylan toth on 11/06/2024 at 21:14):               gameContainer.removeChild(obstacle);
+page.svelte (dylan toth on 11/06/2024 at 21:14):           });
+page.svelte (dylan toth on 11/06/2024 at 21:14):           // Clear obstacle timers
+page.svelte (dylan toth on 11/06/2024 at 21:14):           obstacleTimers.forEach(timer => {
+page.svelte (dylan toth on 11/06/2024 at 21:14):               console.log('Clearing obstacle timer:', timer);
+page.svelte (dylan toth on 11/06/2024 at 21:14):               clearInterval(timer);
+page.svelte (dylan toth on 11/06/2024 at 21:14):           });
+page.svelte (dylan toth on 11/06/2024 at 21:14):           obstacleTimers = [];
+page.svelte (dylan toth on 11/06/2024 at 21:14):           // Reset ground animation
+page.svelte (dylan toth on 11/06/2024 at 21:14):           ground.classList.add('ground-moving');
+page.svelte (dylan toth on 11/06/2024 at 21:14):           ground.classList.remove('ground');
+page.svelte (dylan toth on 11/06/2024 at 21:14):           console.log('Ground animation reset.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):           // Reset the running vinyl counter
+page.svelte (dylan toth on 11/06/2024 at 21:14):           runVinylCount = 0;
+page.svelte (dylan toth on 11/06/2024 at 21:14):           console.log('Run vinyl counter reset to 0.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       }
+page.svelte (dylan toth on 11/06/2024 at 21:14):       gameStarted = true;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       console.log('Starting game loop.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       gameTimerId = setInterval(startGameLoop, 20);
+page.svelte (dylan toth on 11/06/2024 at 21:14):       generateObstacle();
+page.svelte (dylan toth on 11/06/2024 at 21:14):       startObstacleGenerator();
+page.svelte (dylan toth on 11/06/2024 at 21:14):       // Add keyup listener when game starts
+page.svelte (dylan toth on 11/06/2024 at 21:14):       window.addEventListener('keyup', control);
+page.svelte (dylan toth on 11/06/2024 at 21:14):       console.log('Keyup event listener added.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       // Focus the window to ensure it receives key events
+page.svelte (dylan toth on 11/06/2024 at 21:14):       window.focus();
+page.svelte (dylan toth on 11/06/2024 at 21:14):       console.log('Window focused for keyboard events.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   // Game Over Function
+page.svelte (dylan toth on 11/06/2024 at 21:14):   function gameOver() {
+page.svelte (dylan toth on 11/06/2024 at 21:14):       console.log('Game Over triggered.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       clearInterval(gameTimerId);
+page.svelte (dylan toth on 11/06/2024 at 21:14):       gameStarted = false;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       isGameOver = true;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       message = 'Game Over!';
+page.svelte (dylan toth on 11/06/2024 at 21:14):       window.removeEventListener('keyup', control);
+page.svelte (dylan toth on 11/06/2024 at 21:14):       console.log('Keyup event listener removed.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       stopObstacleGenerator();
+page.svelte (dylan toth on 11/06/2024 at 21:14):       // Reset ground animation
+page.svelte (dylan toth on 11/06/2024 at 21:14):       ground.classList.add('ground');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       ground.classList.remove('ground-moving');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       console.log('Ground animation stopped.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   // Cleanup on component destroy
+page.svelte (dylan toth on 11/06/2024 at 21:14):   // onDestroy(() => {
+page.svelte (dylan toth on 11/06/2024 at 21:14):   //     console.log('Component is being destroyed. Cleaning up.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):   //     clearInterval(gameTimerId);
+page.svelte (dylan toth on 11/06/2024 at 21:14):   //     obstacleTimers.forEach(timer => {
+page.svelte (dylan toth on 11/06/2024 at 21:14):   //         console.log('Clearing obstacle timer during cleanup:', timer);
+page.svelte (dylan toth on 11/06/2024 at 21:14):   //         clearInterval(timer);
+page.svelte (dylan toth on 11/06/2024 at 21:14):   //     });
+page.svelte (dylan toth on 11/06/2024 at 21:14):   //     obstacleTimers = [];
+page.svelte (dylan toth on 11/06/2024 at 21:14):   //     stopObstacleGenerator();
+page.svelte (dylan toth on 11/06/2024 at 21:14):   //     window.removeEventListener('keyup', control);
+page.svelte (dylan toth on 11/06/2024 at 21:14):   //     console.log('Keyup event listener removed during cleanup.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):   // });
+page.svelte (dylan toth on 11/06/2024 at 21:14):   onMount(async () => {
+page.svelte (dylan toth on 11/06/2024 at 21:14):       console.log('Component mounted. Fetching user.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       await fetchUser();
+page.svelte (dylan toth on 11/06/2024 at 21:14):       // Initialize sound
+page.svelte (dylan toth on 11/06/2024 at 21:14):       // Uncomment and replace with your sound file path if you have one
+page.svelte (dylan toth on 11/06/2024 at 21:14):       // scoreSound = new Audio('/path_to_your_score_sound.mp3'); // Replace with your sound file path
+page.svelte (dylan toth on 11/06/2024 at 21:14):       // console.log('Score sound initialized.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       // Initialize game elements
+page.svelte (dylan toth on 11/06/2024 at 21:14):       bird = document.querySelector('.bird');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       gameContainer = document.querySelector('.game-container');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       ground = document.querySelector('.ground-moving');
+page.svelte (dylan toth on 11/06/2024 at 21:14):       // Initially position the bird
+page.svelte (dylan toth on 11/06/2024 at 21:14):       bird.style.left = birdLeft + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):       bird.style.bottom = birdBottom + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):       console.log(`Bird initially positioned at Left: ${birdLeft}, Bottom: ${birdBottom}`);
+page.svelte (dylan toth on 11/06/2024 at 21:14):   });
+page.svelte (dylan toth on 11/06/2024 at 21:14): </script>
+page.svelte (dylan toth on 11/06/2024 at 21:14): <!-- Flappy Bird Game Section -->
+page.svelte (dylan toth on 11/06/2024 at 21:14):   <h1 class="title">Games</h1>
+page.svelte (dylan toth on 11/06/2024 at 21:14):   <div class="games-container">
+page.svelte (dylan toth on 11/06/2024 at 21:14):       <div class="game-card">
+page.svelte (dylan toth on 11/06/2024 at 21:14):           <a href="/plinko">
+page.svelte (dylan toth on 11/06/2024 at 21:14):               <img src="/plinko.png" alt="Plinko Game" class="game-image" />
+page.svelte (dylan toth on 11/06/2024 at 21:14):               <div class="game-title">Plinko</div>
+page.svelte (dylan toth on 11/06/2024 at 21:14):           </a>
+page.svelte (dylan toth on 11/06/2024 at 21:14):       </div>
+page.svelte (dylan toth on 11/06/2024 at 21:14):           <a href="/flappyvinyl">
+page.svelte (dylan toth on 11/06/2024 at 21:14):               <img src="/flappyvinyl.png" alt="Flappy Vinyl Game" class="game-image" />
+page.svelte (dylan toth on 11/06/2024 at 21:14):               <div class="game-title">Flappy Vinyl</div>
+page.svelte (dylan toth on 11/06/2024 at 21:14):           </a>
+page.svelte (dylan toth on 11/06/2024 at 22:58):       <div class="game-card">
+page.svelte (dylan toth on 11/07/2024 at 17:19):         <a href="/vinylsweeper">
+page.svelte (dylan toth on 11/07/2024 at 17:19):             <img src="/vinylsweeper.png" alt="Vinyl Sweeper Game" class="game-image" />
+page.svelte (dylan toth on 11/07/2024 at 17:19):             <div class="game-title">Vinylsweeper</div>
+page.svelte (dylan toth on 11/06/2024 at 22:58):         </a>
+page.svelte (dylan toth on 11/06/2024 at 22:58):     </div>
+page.svelte (dylan toth on 11/06/2024 at 21:14): </div>
+page.svelte (dylan toth on 11/06/2024 at 21:14): <!-- Bonus Animation Overlay -->
+page.svelte (dylan toth on 11/06/2024 at 21:14): {#if showBonusAnimation}
+page.svelte (dylan toth on 11/06/2024 at 21:14):   <div class="bonus-overlay">
+page.svelte (dylan toth on 11/06/2024 at 21:14):       <div class="bonus-content" transition:fly|local={{ y: -200, duration: 500 }} >
+page.svelte (dylan toth on 11/06/2024 at 21:14):           <h2>ðŸŽ‰ Daily Bonus!</h2>
+page.svelte (dylan toth on 11/06/2024 at 21:14):           <p>You've received 100 Vinyls!</p>
+page.svelte (dylan toth on 11/06/2024 at 21:14):           <!-- <img src="/bonus.gif" class="bonus-animation" /> -->
+page.svelte (dylan toth on 11/06/2024 at 21:14):       </div>
+page.svelte (dylan toth on 11/06/2024 at 21:14):   </div>
+page.svelte (dylan toth on 11/06/2024 at 21:14): {/if}
+page.svelte (dylan toth on 11/06/2024 at 21:14): <style>
+page.svelte (dylan toth on 11/06/2024 at 21:14):   /* Main Page Styling */
+page.svelte (dylan toth on 11/06/2024 at 21:14):   .games-page {
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   /* Title Styling */
+page.svelte (dylan toth on 11/06/2024 at 21:14):   .title {
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   /* Games Container */
+page.svelte (dylan toth on 11/06/2024 at 21:14):   .games-container {
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   /* Game Card Styling */
+page.svelte (dylan toth on 11/06/2024 at 21:14):   .game-card {
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   .game-card:hover {
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   /* Game Image Styling */
+page.svelte (dylan toth on 11/06/2024 at 21:14):   .game-image {
+page.svelte (dylan toth on 11/06/2024 at 21:14):       height: 300px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   /* Game Title Styling */
+page.svelte (dylan toth on 11/06/2024 at 21:14):   .game-title {
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   .game-card:hover .game-title {
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   /* Link Styling */
+page.svelte (dylan toth on 11/06/2024 at 21:14):   a {
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   /* Responsive Design */
+page.svelte (dylan toth on 11/06/2024 at 21:14):   @media (max-width: 768px) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):           width: 80%;
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   @media (max-width: 480px) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):           font-size: 2.5em;
+page.svelte (dylan toth on 11/06/2024 at 21:14):           font-size: 1.5em;
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   /* Bonus Animation Overlay Styling */
+page.svelte (dylan toth on 11/06/2024 at 21:14):   .bonus-overlay {
+page.svelte (dylan toth on 11/06/2024 at 21:14):       position: fixed;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       top: 0;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       left: 0;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       width: 100%;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       height: 100%;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       background: rgba(0, 0, 0, 0.8);
+page.svelte (dylan toth on 11/06/2024 at 21:14):       display: flex;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       align-items: center;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       justify-content: center;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       z-index: 1000;
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   .bonus-content {
+page.svelte (dylan toth on 11/06/2024 at 21:14):       padding: 40px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       border-radius: 15px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       text-align: center;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       position: relative;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       width: 80%;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       max-width: 500px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   .bonus-content h2 {
+page.svelte (dylan toth on 11/06/2024 at 21:14):       font-size: 2em;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       margin-bottom: 20px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   .bonus-content p {
+page.svelte (dylan toth on 11/06/2024 at 21:14):       font-size: 1.2em;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       margin-bottom: 30px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   .bonus-animation {
+page.svelte (dylan toth on 11/06/2024 at 21:14):       width: 100px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       height: 100px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       object-fit: cover;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       margin-bottom: 30px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   .close-button {
+page.svelte (dylan toth on 11/06/2024 at 21:14):       padding: 10px 20px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       color: #fff;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       font-size: 1em;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       border: none;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       border-radius: 5px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       cursor: pointer;
+page.svelte (dylan toth on 11/06/2024 at 21:14):       transition: background-color 0.3s;
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14):   .close-button:hover {
+page.svelte (dylan toth on 11/06/2024 at 21:14):   }
+page.svelte (dylan toth on 11/06/2024 at 21:14): </style>
+page.svelte (dylan toth on 11/02/2024 at 22:15):   import Plinko from "$lib/Plinko.svelte";
+page.svelte (dylan toth on 11/02/2024 at 22:15): </script>
+page.svelte (dylan toth on 11/02/2024 at 22:15): <div class="main-content">
+page.svelte (dylan toth on 11/02/2024 at 22:15):   <div class="left-side">
+page.svelte (dylan toth on 11/02/2024 at 22:15):   </div>
+page.svelte (dylan toth on 11/02/2024 at 22:15):   <div class="center-content">
+page.svelte (dylan toth on 11/02/2024 at 22:15):     <Plinko />
+page.svelte (dylan toth on 11/02/2024 at 22:15):   </div>
+page.svelte (dylan toth on 11/06/2024 at 21:14):   <!-- <div class="right-side">
+page.svelte (dylan toth on 11/02/2024 at 22:15):     <VideoEmbed />
+page.svelte (dylan toth on 11/06/2024 at 21:14):   </div> -->
+page.svelte (dylan toth on 11/02/2024 at 22:15): </div>
+page.svelte (dylan toth on 11/02/2024 at 22:15): <style>
+page.svelte (dylan toth on 11/02/2024 at 22:15):   .main-content {
+page.svelte (dylan toth on 11/02/2024 at 22:15):     display: flex;
+page.svelte (dylan toth on 11/02/2024 at 22:15):     height: 100vh;
+page.svelte (dylan toth on 11/02/2024 at 22:15):   }
+page.svelte (dylan toth on 11/02/2024 at 22:15):   .left-side {
+page.svelte (dylan toth on 11/02/2024 at 22:15):     flex: 0.1;
+page.svelte (dylan toth on 11/02/2024 at 22:15):   }
+page.svelte (dylan toth on 11/02/2024 at 22:15):   .center-content {
+page.svelte (dylan toth on 11/02/2024 at 22:15):     /* justify-content: center; */
+page.svelte (dylan toth on 11/02/2024 at 22:15):     flex: 0.75;
+page.svelte (dylan toth on 11/02/2024 at 22:15):   }
+page.svelte (dylan toth on 11/02/2024 at 22:15):   .right-side {
+page.svelte (dylan toth on 11/02/2024 at 22:15):     flex: 0.15;
+page.svelte (dylan toth on 11/02/2024 at 22:15):   }
+page.svelte (dylan toth on 11/02/2024 at 22:15): </style>
+page.svelte (dylan toth on 11/07/2024 at 17:19): <!-- src/routes/minesweeper.svelte -->
+page.svelte (dylan toth on 11/07/2024 at 17:19): <script>
+page.svelte (dylan toth on 11/07/2024 at 17:19):     import { onMount, onDestroy } from 'svelte';
+page.svelte (dylan toth on 11/07/2024 at 17:19):     import { supabase } from '$lib/supabaseClient.js';
+page.svelte (dylan toth on 11/07/2024 at 17:19):     import { addVinyls } from '$lib/vinylsStore.js';
+page.svelte (dylan toth on 11/07/2024 at 17:19):     import Cell from '$lib/Cell.svelte'; // Ensure this component exists
+page.svelte (dylan toth on 11/07/2024 at 17:19):     import { fly, fade } from 'svelte/transition';
+page.svelte (dylan toth on 11/07/2024 at 17:19):     let user = null;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     let message = '';
+page.svelte (dylan toth on 11/07/2024 at 17:19):     let gameOver = false;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     let score = 0;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     const rows = 10;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     const cols = 10;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     const minesCount = 20;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     let grid = [];
+page.svelte (dylan toth on 11/07/2024 at 17:19):     let mines = new Set();
+page.svelte (dylan toth on 11/07/2024 at 17:19):     let revealedCount = 0;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     $: gridTemplateRows = `repeat(${rows}, 40px)`;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     $: gridTemplateColumns = `repeat(${cols}, 40px)`;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     function initializeGrid() {
+page.svelte (dylan toth on 11/07/2024 at 17:19):         grid = [];
+page.svelte (dylan toth on 11/07/2024 at 17:19):         for (let r = 0; r < rows; r++) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):             const row = [];
+page.svelte (dylan toth on 11/07/2024 at 17:19):             for (let c = 0; c < cols; c++) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):                 row.push({
+page.svelte (dylan toth on 11/07/2024 at 17:19):                     row: r,
+page.svelte (dylan toth on 11/07/2024 at 17:19):                     col: c,
+page.svelte (dylan toth on 11/07/2024 at 17:19):                     isMine: false,
+page.svelte (dylan toth on 11/07/2024 at 17:19):                     isRevealed: false,
+page.svelte (dylan toth on 11/07/2024 at 17:19):                     isFlagged: false,
+page.svelte (dylan toth on 11/07/2024 at 17:19):                     adjacentMines: 0
+page.svelte (dylan toth on 11/07/2024 at 17:19):                 });
+page.svelte (dylan toth on 11/07/2024 at 17:19):             }
+page.svelte (dylan toth on 11/07/2024 at 17:19):             grid.push(row);
+page.svelte (dylan toth on 11/07/2024 at 17:19):         }
+page.svelte (dylan toth on 11/07/2024 at 17:19):         placeMines();
+page.svelte (dylan toth on 11/07/2024 at 17:19):         calculateAdjacentMines();
+page.svelte (dylan toth on 11/07/2024 at 17:19):     }
+page.svelte (dylan toth on 11/07/2024 at 17:19):     function placeMines() {
+page.svelte (dylan toth on 11/07/2024 at 17:19):         mines = new Set();
+page.svelte (dylan toth on 11/07/2024 at 17:19):         while (mines.size < minesCount) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):             const r = Math.floor(Math.random() * rows);
+page.svelte (dylan toth on 11/07/2024 at 17:19):             const c = Math.floor(Math.random() * cols);
+page.svelte (dylan toth on 11/07/2024 at 17:19):             const key = `${r},${c}`;
+page.svelte (dylan toth on 11/07/2024 at 17:19):             if (!mines.has(key)) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):                 mines.add(key);
+page.svelte (dylan toth on 11/07/2024 at 17:19):                 grid[r][c].isMine = true;
+page.svelte (dylan toth on 11/07/2024 at 17:19):             }
+page.svelte (dylan toth on 11/07/2024 at 17:19):         }
+page.svelte (dylan toth on 11/07/2024 at 17:19):     }
+page.svelte (dylan toth on 11/07/2024 at 17:19):     function calculateAdjacentMines() {
+page.svelte (dylan toth on 11/07/2024 at 17:19):         const directions = [
+page.svelte (dylan toth on 11/07/2024 at 17:19):             [-1, -1], [-1, 0], [-1, 1],
+page.svelte (dylan toth on 11/07/2024 at 17:19):             [ 0, -1],         [ 0, 1],
+page.svelte (dylan toth on 11/07/2024 at 17:19):             [ 1, -1], [ 1, 0], [ 1, 1]
+page.svelte (dylan toth on 11/07/2024 at 17:19):         ];
+page.svelte (dylan toth on 11/07/2024 at 17:19):         for (let r = 0; r < rows; r++) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):             for (let c = 0; c < cols; c++) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):                 if (grid[r][c].isMine) continue;
+page.svelte (dylan toth on 11/07/2024 at 17:19):                 let count = 0;
+page.svelte (dylan toth on 11/07/2024 at 17:19):                 for (const [dr, dc] of directions) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):                     const nr = r + dr;
+page.svelte (dylan toth on 11/07/2024 at 17:19):                     const nc = c + dc;
+page.svelte (dylan toth on 11/07/2024 at 17:19):                     if (nr >= 0 && nr < rows && nc >= 0 && nc < cols && grid[nr][nc].isMine) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):                         count++;
+page.svelte (dylan toth on 11/07/2024 at 17:19):                     }
+page.svelte (dylan toth on 11/07/2024 at 17:19):                 }
+page.svelte (dylan toth on 11/07/2024 at 17:19):                 grid[r][c].adjacentMines = count;
+page.svelte (dylan toth on 11/07/2024 at 17:19):             }
+page.svelte (dylan toth on 11/07/2024 at 17:19):         }
+page.svelte (dylan toth on 11/07/2024 at 17:19):     }
+page.svelte (dylan toth on 11/07/2024 at 17:19):     function handleCellClick(cell) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):         if (gameOver || cell.isRevealed || cell.isFlagged) return;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         if (cell.isMine) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):             revealMine(cell);
+page.svelte (dylan toth on 11/07/2024 at 17:19):             endGame(false);
+page.svelte (dylan toth on 11/07/2024 at 17:19):         } else {
+page.svelte (dylan toth on 11/07/2024 at 17:19):             revealCell(cell);
+page.svelte (dylan toth on 11/07/2024 at 17:19):             checkWin();
+page.svelte (dylan toth on 11/07/2024 at 17:19):         }
+page.svelte (dylan toth on 11/07/2024 at 17:19):     }
+page.svelte (dylan toth on 11/07/2024 at 17:19):     function handleCellRightClick(event, cell) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):         event.preventDefault();
+page.svelte (dylan toth on 11/07/2024 at 17:19):         if (gameOver || cell.isRevealed) return;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         cell.isFlagged = !cell.isFlagged;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         grid = [...grid]; // Trigger reactivity
+page.svelte (dylan toth on 11/07/2024 at 17:19):     }
+page.svelte (dylan toth on 11/07/2024 at 17:19):     function revealCell(cell) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):         if (cell.isRevealed || cell.isFlagged) return;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         cell.isRevealed = true;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         revealedCount++;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         if (cell.adjacentMines === 0) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):             const directions = [
+page.svelte (dylan toth on 11/07/2024 at 17:19):                 [-1, -1], [-1, 0], [-1, 1],
+page.svelte (dylan toth on 11/07/2024 at 17:19):                 [ 0, -1],         [ 0, 1],
+page.svelte (dylan toth on 11/07/2024 at 17:19):                 [ 1, -1], [ 1, 0], [ 1, 1]
+page.svelte (dylan toth on 11/07/2024 at 17:19):             ];
+page.svelte (dylan toth on 11/07/2024 at 17:19):             for (const [dr, dc] of directions) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):                 const nr = cell.row + dr;
+page.svelte (dylan toth on 11/07/2024 at 17:19):                 const nc = cell.col + dc;
+page.svelte (dylan toth on 11/07/2024 at 17:19):                 if (nr >= 0 && nr < rows && nc >= 0 && nc < cols) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):                     revealCell(grid[nr][nc]);
+page.svelte (dylan toth on 11/07/2024 at 17:19):                 }
+page.svelte (dylan toth on 11/07/2024 at 17:19):             }
+page.svelte (dylan toth on 11/07/2024 at 17:19):         }
+page.svelte (dylan toth on 11/07/2024 at 17:19):         grid = [...grid];
+page.svelte (dylan toth on 11/07/2024 at 17:19):     }
+page.svelte (dylan toth on 11/07/2024 at 17:19):     function revealMine(cell) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):         grid.forEach(row => row.forEach(c => {
+page.svelte (dylan toth on 11/07/2024 at 17:19):             if (c.isMine) c.isRevealed = true;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         }));
+page.svelte (dylan toth on 11/07/2024 at 17:19):         grid = [...grid];
+page.svelte (dylan toth on 11/07/2024 at 17:19):     }
+page.svelte (dylan toth on 11/07/2024 at 17:19):     function checkWin() {
+page.svelte (dylan toth on 11/07/2024 at 17:19):         if (revealedCount === rows * cols - minesCount) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):             endGame(true);
+page.svelte (dylan toth on 11/07/2024 at 17:19):         }
+page.svelte (dylan toth on 11/07/2024 at 17:19):     }
+page.svelte (dylan toth on 11/07/2024 at 17:19): async function endGame(won) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):     gameOver = true;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     message = won ? 'You won! 100 Vinyls added.' : 'Game Over!';
+page.svelte (dylan toth on 11/07/2024 at 17:19):     if (won) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):         try {
+page.svelte (dylan toth on 11/07/2024 at 17:19):             await addVinyls(user.id, 100); // Add 100 Vinyls
+page.svelte (dylan toth on 11/07/2024 at 17:19):             console.log('100 Vinyls added successfully.');
+page.svelte (dylan toth on 11/07/2024 at 17:19):         } catch (err) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):             console.error('Vinyl Error:', err);
+page.svelte (dylan toth on 11/07/2024 at 17:19):         }
+page.svelte (dylan toth on 11/07/2024 at 17:19):     }
+page.svelte (dylan toth on 11/07/2024 at 17:19):     grid = [...grid];
+page.svelte (dylan toth on 11/07/2024 at 17:19): }
+page.svelte (dylan toth on 11/07/2024 at 17:19):     function startGame() {
+page.svelte (dylan toth on 11/07/2024 at 17:19):         gameOver = false;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         revealedCount = 0;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         message = '';
+page.svelte (dylan toth on 11/07/2024 at 17:19):         initializeGrid();
+page.svelte (dylan toth on 11/07/2024 at 17:19):     }
+page.svelte (dylan toth on 11/07/2024 at 17:19):     onMount(async () => {
+page.svelte (dylan toth on 11/07/2024 at 17:19):         const { data: session } = await supabase.auth.getSession();
+page.svelte (dylan toth on 11/07/2024 at 17:19):         user = session?.session?.user;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         if (!user) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):             message = 'Log in to play.';
+page.svelte (dylan toth on 11/07/2024 at 17:19):             return;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         }
+page.svelte (dylan toth on 11/07/2024 at 17:19):         startGame();
+page.svelte (dylan toth on 11/07/2024 at 17:19):     });
+page.svelte (dylan toth on 11/07/2024 at 17:19): </script>
+page.svelte (dylan toth on 11/07/2024 at 17:19): <!-- Game UI -->
+page.svelte (dylan toth on 11/07/2024 at 17:19): <div class="minesweeper-game">
+page.svelte (dylan toth on 11/07/2024 at 17:19):     <h2>Vinylsweeper</h2>
+page.svelte (dylan toth on 11/07/2024 at 17:19):     {#if message}
+page.svelte (dylan toth on 11/07/2024 at 17:19):         <div class="message" transition:fade>{message}</div>
+page.svelte (dylan toth on 11/07/2024 at 17:19):     {/if}
+page.svelte (dylan toth on 11/07/2024 at 17:19):     <div class="grid" style="grid-template-rows: {gridTemplateRows}; grid-template-columns: {gridTemplateColumns};">
+page.svelte (dylan toth on 11/07/2024 at 17:19):         {#each grid as row, rowIndex}
+page.svelte (dylan toth on 11/07/2024 at 17:19):             {#each row as cell}
+page.svelte (dylan toth on 11/07/2024 at 17:19):                 <Cell {cell} on:click={() => handleCellClick(cell)} on:contextmenu={(e) => handleCellRightClick(e, cell)} />
+page.svelte (dylan toth on 11/07/2024 at 17:19):             {/each}
+page.svelte (dylan toth on 11/07/2024 at 17:19):         {/each}
+page.svelte (dylan toth on 11/07/2024 at 17:19):     </div>
+page.svelte (dylan toth on 11/07/2024 at 17:19):     {#if gameOver}
+page.svelte (dylan toth on 11/07/2024 at 17:19):         <button class="restart-button" on:click={startGame} transition:fly>Restart</button>
+page.svelte (dylan toth on 11/07/2024 at 17:19):     {/if}
+page.svelte (dylan toth on 11/07/2024 at 17:19): </div>
+page.svelte (dylan toth on 11/07/2024 at 17:19): <style>
+page.svelte (dylan toth on 11/07/2024 at 17:19):     .minesweeper-game {
+page.svelte (dylan toth on 11/07/2024 at 17:19):         text-align: center;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         margin: auto;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         background: #16181c;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         padding: 20px;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         border-radius: 10px;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         width: fit-content;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     }
+page.svelte (dylan toth on 11/07/2024 at 17:19):     .grid {
+page.svelte (dylan toth on 11/07/2024 at 17:19):         display: grid;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         gap: 2px;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     }
+page.svelte (dylan toth on 11/07/2024 at 17:19):     .message {
+page.svelte (dylan toth on 11/07/2024 at 17:19):         background-color: #ffcccb;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         margin-bottom: 10px;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         padding: 10px;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         border-radius: 5px;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         font-weight: bold;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     }
+page.svelte (dylan toth on 11/07/2024 at 17:19):     .restart-button {
+page.svelte (dylan toth on 11/07/2024 at 17:19):         background-color: #007bff;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         color: #fff;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         padding: 10px;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         border: none;
+page.svelte (dylan toth on 11/07/2024 at 17:19):         cursor: pointer;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     }
+page.svelte (dylan toth on 11/07/2024 at 17:19):     .restart-button:hover {
+page.svelte (dylan toth on 11/07/2024 at 17:19):         background-color: #0056b3;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     }
+page.svelte (dylan toth on 11/07/2024 at 17:19): </style>
podium.svelte (dylan toth on 11/12/2024 at 13:04):   import { sort } from "d3";
podium.svelte (dylan toth on 11/12/2024 at 13:04):     let sortingKey = 'total_likes';
podium.svelte (dylan toth on 11/12/2024 at 13:04):     let sortOrder = 'desc';
podium.svelte (dylan toth on 11/12/2024 at 13:04):     $: sortedData = [...data].sort((a, b) => {
podium.svelte (dylan toth on 11/12/2024 at 13:04):         let aValue = a[sortingKey];
podium.svelte (dylan toth on 11/12/2024 at 13:04):         let bValue = b[sortingKey];
podium.svelte (dylan toth on 11/12/2024 at 13:04):         if (sortingKey === 'vinyls') {
podium.svelte (dylan toth on 11/12/2024 at 13:04):             aValue = a.vinyls;
podium.svelte (dylan toth on 11/12/2024 at 13:04):             bValue = b.vinyls;
podium.svelte (dylan toth on 11/12/2024 at 13:04):         }
podium.svelte (dylan toth on 11/12/2024 at 13:04):         if (aValue > bValue) {
podium.svelte (dylan toth on 11/12/2024 at 13:04):             return sortOrder === 'asc' ? 1 : -1;
podium.svelte (dylan toth on 11/12/2024 at 13:04):         } else if (aValue < bValue) {
podium.svelte (dylan toth on 11/12/2024 at 13:04):             return sortOrder === 'asc' ? -1 : 1;
podium.svelte (dylan toth on 11/12/2024 at 13:04):         } else {
podium.svelte (dylan toth on 11/12/2024 at 13:04):             return 0;
podium.svelte (dylan toth on 11/12/2024 at 13:04):         }
podium.svelte (dylan toth on 11/12/2024 at 13:04):     });
podium.svelte (dylan toth on 11/12/2024 at 13:04):     $: if (sortedData.length >= 3) {
podium.svelte (dylan toth on 11/12/2024 at 13:04):         podium = [sortedData[1], sortedData[0], sortedData[2]];
podium.svelte (dylan toth on 11/12/2024 at 13:04):     } else {
podium.svelte (dylan toth on 11/12/2024 at 13:04):         podium = [];
podium.svelte (dylan toth on 11/12/2024 at 13:04):     }
podium.svelte (dylan toth on 11/12/2024 at 13:04):     function handleSortChange(key) {
podium.svelte (dylan toth on 11/12/2024 at 13:04):         if (sortingKey === key) {
podium.svelte (dylan toth on 11/12/2024 at 13:04):             sortOrder = sortOrder === 'asc' ? 'desc' : 'desc';
podium.svelte (dylan toth on 11/12/2024 at 13:04):         } else {
podium.svelte (dylan toth on 11/12/2024 at 13:04):             sortingKey = key;
podium.svelte (dylan toth on 11/12/2024 at 13:04):             sortOrder = 'desc';
podium.svelte (dylan toth on 11/12/2024 at 13:04):         }
podium.svelte (dylan toth on 11/12/2024 at 13:04):     }
podium.svelte (dylan toth on 11/12/2024 at 13:04): </script>
podium.svelte (dylan toth on 11/12/2024 at 13:04):             <div class="podium-position">
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 <div class="profile-picture-wrapper">
podium.svelte (dylan toth on 11/12/2024 at 13:04):                     <div class="profile-picture">
podium.svelte (dylan toth on 11/12/2024 at 13:04):                         <img class="profile-picture" src="{user.avatar_url}" alt="profile-pic" />
podium.svelte (dylan toth on 11/12/2024 at 13:04):                     </div>
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 <div>
podium.svelte (dylan toth on 11/12/2024 at 13:04):                     <span class="username">{user.username}</span>
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 </div>
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 {#if sortingKey == 'vinyls'}
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 <div class="likes-wrapper">
podium.svelte (dylan toth on 11/12/2024 at 13:04):                     <span class="like-count">{user.vinyls}</span>
podium.svelte (dylan toth on 11/12/2024 at 13:04):                     <span class="likes-text">vinyls</span>
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 </div>
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 {:else if sortingKey == 'total_likes'}
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 <div class="likes-wrapper">
podium.svelte (dylan toth on 11/12/2024 at 13:04):                     <span class="like-count">{user.total_likes}</span>
podium.svelte (dylan toth on 11/12/2024 at 13:04):                     <span class="likes-text">likes</span>
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 </div>
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 {:else}
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 <div class="likes-wrapper">
podium.svelte (dylan toth on 11/12/2024 at 13:04):                     <span class="like-count">{user.post_count}</span>
podium.svelte (dylan toth on 11/12/2024 at 13:04):                     <span class="likes-text">posts</span>
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 </div>
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 {/if}
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 <div class="podium-bar"></div>
podium.svelte (dylan toth on 11/12/2024 at 13:04):             <span
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 class="user-info {sortingKey === 'vinyls' ? 'selected' : ''}"
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 on:click={() => handleSortChange('vinyls')}
podium.svelte (dylan toth on 11/12/2024 at 13:04):             >
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 Vinyls
podium.svelte (dylan toth on 11/12/2024 at 13:04):             </span>
podium.svelte (dylan toth on 11/12/2024 at 13:04):             <span
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 class="user-info {sortingKey === 'total_likes' ? 'selected' : ''}"
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 on:click={() => handleSortChange('total_likes')}
podium.svelte (dylan toth on 11/12/2024 at 13:04):             >
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 Likes
podium.svelte (dylan toth on 11/12/2024 at 13:04):             </span>
podium.svelte (dylan toth on 11/12/2024 at 13:04):             <span
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 class="user-info {sortingKey === 'post_count' ? 'selected' : ''}"
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 on:click={() => handleSortChange('post_count')}
podium.svelte (dylan toth on 11/12/2024 at 13:04):             >
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 Posts
podium.svelte (dylan toth on 11/12/2024 at 13:04):             </span>
podium.svelte (dylan toth on 11/12/2024 at 13:04):         {#each sortedData as user, index}
podium.svelte (dylan toth on 11/12/2024 at 13:04):             <div class="user">
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 <img class="small-profile-pic" src="{user.avatar_url}" alt="profile-pic">
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 <a href="/profiles/{user.username}" class="username-1">{user.username}</a>
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 <span class="user-info">{user.vinyls}</span>
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 <span class="user-info">{user.total_likes}</span>
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 <span class="user-info">{user.post_count}</span>
podium.svelte (dylan toth on 11/12/2024 at 13:04):             </div>
podium.svelte (dylan toth on 11/12/2024 at 13:04):             {#if index < sortedData.length - 1}
podium.svelte (dylan toth on 11/12/2024 at 13:04):                 <div class="user-divider"></div>
podium.svelte (dylan toth on 11/12/2024 at 13:04):             {/if}
podium.svelte (dylan toth on 11/12/2024 at 13:04):     .username-1 {
podium.svelte (dylan toth on 11/12/2024 at 13:04):         text-decoration: none;
podium.svelte (dylan toth on 11/12/2024 at 13:04):         color: white;
podium.svelte (dylan toth on 11/12/2024 at 13:04):     }
podium.svelte (dylan toth on 11/12/2024 at 13:04):     .leaderboard-wrapper {
podium.svelte (dylan toth on 11/12/2024 at 13:04):         padding-left: 30px;
podium.svelte (dylan toth on 11/12/2024 at 13:04):         padding-right: 30px;
podium.svelte (dylan toth on 11/12/2024 at 13:04):     .leaderboard-header span {
podium.svelte (dylan toth on 11/12/2024 at 13:04):         /* cursor: pointer; */
podium.svelte (dylan toth on 11/12/2024 at 13:04):     }
podium.svelte (dylan toth on 11/12/2024 at 13:04):     .leaderboard-header .selected {
podium.svelte (dylan toth on 11/12/2024 at 13:04):         text-decoration: underline;
podium.svelte (dylan toth on 11/12/2024 at 13:04):     }
podium.svelte (dylan toth on 11/12/2024 at 13:04):     .user {
podium.svelte (dylan toth on 11/12/2024 at 13:04):         font-size: 16px;
podium.svelte (dylan toth on 11/12/2024 at 13:04):         display: grid;
podium.svelte (dylan toth on 11/12/2024 at 13:04):         gap: 1rem;
podium.svelte (dylan toth on 11/12/2024 at 13:04):         padding-left: 30px;
podium.svelte (dylan toth on 11/12/2024 at 13:04):         padding-right: 30px;
podium.svelte (dylan toth on 11/12/2024 at 13:04):         align-items: center;
podium.svelte (dylan toth on 11/12/2024 at 13:04):         padding-top: 3px;
podium.svelte (dylan toth on 11/12/2024 at 13:04):         padding-bottom: 3px;
podium.svelte (dylan toth on 11/12/2024 at 13:04):         cursor: pointer;
+page.svelte (dylan toth on 11/12/2024 at 12:30):   // import { selectedSong } from "$lib/stores";
+page.svelte (dylan toth on 11/12/2024 at 12:30):     // unsubscribe();
+page.svelte (dylan toth on 11/12/2024 at 12:30):   // const unsubscribe = selectedSong.subscribe((song) => {
+page.svelte (dylan toth on 11/12/2024 at 12:30):   //   if (song) {
+page.svelte (dylan toth on 11/12/2024 at 12:30):   //     localSelectedTrack = {
+page.svelte (dylan toth on 11/12/2024 at 12:30):   //       id: song.id,
+page.svelte (dylan toth on 11/12/2024 at 12:30):   //       title: song.title,
+page.svelte (dylan toth on 11/12/2024 at 12:30):   //       artist: song.artist,
+page.svelte (dylan toth on 11/12/2024 at 12:30):   //       cover: song.cover,
+page.svelte (dylan toth on 11/12/2024 at 12:30):   //     };
+page.svelte (dylan toth on 11/12/2024 at 12:30):   //   }
+page.svelte (dylan toth on 11/12/2024 at 12:30):   // });
+page.svelte (dylan toth on 11/12/2024 at 12:30):       // selectedSong.set(song);
+page.svelte (dylan toth on 11/07/2024 at 17:19):       const response = await fetch(`/api/posts?page=${data.nextPage}&filter=${filterOption}&sort=${sortOption}&user_id=${session_uuid}`);
+page.svelte (dylan toth on 11/07/2024 at 17:19):         <option value="asc">Rating (Descending)</option>
+page.svelte (dylan toth on 11/07/2024 at 17:19):         <option value="desc">Rating (Ascending)</option>
+page.svelte (dylan toth on 11/07/2024 at 17:19):         created_at={post.created_at}
+page.svelte (dylan toth on 11/12/2024 at 12:30):     /* border: 2px dashed #007bff;
+page.svelte (dylan toth on 11/12/2024 at 12:30):     background-color: rgba(0, 123, 255, 0.1); */
+page.svelte (dylan toth on 11/12/2024 at 12:30):     /* border: 2px dashed #007bff;
+page.svelte (dylan toth on 11/12/2024 at 12:30):     background-color: rgba(0, 123, 255, 0.1); */
dtoth2.md    (dylan toth on 11/02/2024 at 22:16): - add games section
dtoth2.md    (dylan toth on 11/02/2024 at 22:16): This sprint I primarily worked on the games section of our page. This included creating a brand new game from scratch with matter.js for physics. This game is a plinko style ball dropper game, and was done to allow users to listen to music and play games from the same page. I also fixed a couple of small bugs which arose from last sprint.
+server.js   (dylan toth on 11/07/2024 at 15:17): import { supabase } from "$lib/supabaseClient";
+server.js   (dylan toth on 11/07/2024 at 15:36):   console.log(url);
+server.js   (dylan toth on 11/07/2024 at 15:36):   // Extract query parameters with default values
+server.js   (dylan toth on 11/07/2024 at 15:17):   const page = parseInt(url.searchParams.get("page")) || 1;
+server.js   (dylan toth on 11/07/2024 at 15:36):   const filter = url.searchParams.get("filter") || "all"; // e.g., "all" or "following"
+server.js   (dylan toth on 11/07/2024 at 15:17):   const sort = url.searchParams.get("sort") || "recent";
+server.js   (dylan toth on 11/07/2024 at 15:36):   const userId = url.searchParams.get("user_id") || null; // User ID passed as a query parameter
+server.js   (dylan toth on 11/07/2024 at 15:36):   // Initialize data and totalCount variables
+server.js   (dylan toth on 11/07/2024 at 15:36):   let data = [];
+server.js   (dylan toth on 11/07/2024 at 15:36):   let totalCount = 0;
+server.js   (dylan toth on 11/07/2024 at 15:36):   // Initialize an array to hold followed user IDs if filtering by following
+server.js   (dylan toth on 11/07/2024 at 15:36):   let followedUserIds = [];
+server.js   (dylan toth on 11/07/2024 at 15:36):   // Handle filtering based on following
+server.js   (dylan toth on 11/07/2024 at 15:36):   if (filter === "following") {
+server.js   (dylan toth on 11/07/2024 at 15:36):     if (!userId) {
+server.js   (dylan toth on 11/07/2024 at 15:36):       // If user_id is not provided, return an error
+server.js   (dylan toth on 11/07/2024 at 15:17):       return new Response(
+server.js   (dylan toth on 11/07/2024 at 15:17):         JSON.stringify({
+server.js   (dylan toth on 11/07/2024 at 15:17):           success: false,
+server.js   (dylan toth on 11/07/2024 at 15:36):           message: "user_id query parameter is required for following filter.",
+server.js   (dylan toth on 11/07/2024 at 15:36):           posts: [],
+server.js   (dylan toth on 11/07/2024 at 15:36):           nextPage: null,
+server.js   (dylan toth on 11/07/2024 at 15:36):         }),
+server.js   (dylan toth on 11/07/2024 at 15:36):         { status: 400, headers: { "Content-Type": "application/json" } }
+server.js   (dylan toth on 11/07/2024 at 15:36):       );
+server.js   (dylan toth on 11/07/2024 at 15:36):     }
+server.js   (dylan toth on 11/07/2024 at 15:36):     try {
+server.js   (dylan toth on 11/07/2024 at 15:36):       // Fetch the list of followed user IDs for the specified user_id
+server.js   (dylan toth on 11/07/2024 at 15:36):       const { data: followingData, error: followingError } = await supabase
+server.js   (dylan toth on 11/07/2024 at 17:19):         .from("follows") // Ensure this matches your actual table name
+server.js   (dylan toth on 11/07/2024 at 15:36):         .select("followed_id")
+server.js   (dylan toth on 11/07/2024 at 15:36):         .eq("owner_id", userId);
+server.js   (dylan toth on 11/07/2024 at 15:36):       if (followingError) {
+server.js   (dylan toth on 11/07/2024 at 15:36):         console.error("Error fetching followed users:", followingError);
+server.js   (dylan toth on 11/07/2024 at 15:36):         return new Response(
+server.js   (dylan toth on 11/07/2024 at 15:36):           JSON.stringify({
+server.js   (dylan toth on 11/07/2024 at 15:36):             success: false,
+server.js   (dylan toth on 11/07/2024 at 15:36):             message: "Error fetching followed users.",
+server.js   (dylan toth on 11/07/2024 at 15:36):             posts: [],
+server.js   (dylan toth on 11/07/2024 at 15:36):             nextPage: null,
+server.js   (dylan toth on 11/07/2024 at 15:36):           }),
+server.js   (dylan toth on 11/07/2024 at 15:36):           { status: 500, headers: { "Content-Type": "application/json" } }
+server.js   (dylan toth on 11/07/2024 at 15:36):         );
+server.js   (dylan toth on 11/07/2024 at 15:36):       }
+server.js   (dylan toth on 11/07/2024 at 15:36):       followedUserIds = followingData.map((f) => f.followed_id);
+server.js   (dylan toth on 11/07/2024 at 15:36):       if (followedUserIds.length === 0) {
+server.js   (dylan toth on 11/07/2024 at 15:36):         // If the user follows no one, return an empty list
+server.js   (dylan toth on 11/07/2024 at 15:36):         return new Response(
+server.js   (dylan toth on 11/07/2024 at 15:36):           JSON.stringify({
+server.js   (dylan toth on 11/07/2024 at 15:36):             success: true,
+server.js   (dylan toth on 11/07/2024 at 15:36):             posts: [],
+server.js   (dylan toth on 11/07/2024 at 15:36):             nextPage: null,
+server.js   (dylan toth on 11/07/2024 at 15:36):           }),
+server.js   (dylan toth on 11/07/2024 at 15:36):           { status: 200, headers: { "Content-Type": "application/json" } }
+server.js   (dylan toth on 11/07/2024 at 15:36):         );
+server.js   (dylan toth on 11/07/2024 at 15:36):       }
+server.js   (dylan toth on 11/07/2024 at 15:36):     } catch (exception) {
+server.js   (dylan toth on 11/07/2024 at 15:36):       console.error("Unexpected error fetching followed users:", exception);
+server.js   (dylan toth on 11/07/2024 at 15:36):       return new Response(
+server.js   (dylan toth on 11/07/2024 at 15:36):         JSON.stringify({
+server.js   (dylan toth on 11/07/2024 at 15:36):           success: false,
+server.js   (dylan toth on 11/07/2024 at 15:36):           message: "Unexpected error fetching followed users.",
+server.js   (dylan toth on 11/07/2024 at 15:17):           posts: [],
+server.js   (dylan toth on 11/07/2024 at 15:17):           nextPage: null,
+server.js   (dylan toth on 11/07/2024 at 15:17):         }),
+server.js   (dylan toth on 11/07/2024 at 15:17):         { status: 500, headers: { "Content-Type": "application/json" } }
+server.js   (dylan toth on 11/07/2024 at 15:17):       );
+server.js   (dylan toth on 11/07/2024 at 15:17):     }
+server.js   (dylan toth on 11/07/2024 at 15:36):   }
+server.js   (dylan toth on 11/07/2024 at 15:36):   if (sort === "recent") {
+server.js   (dylan toth on 11/07/2024 at 15:36):     // Handling "recent" sort: Fetch paginated recent posts
+server.js   (dylan toth on 11/07/2024 at 15:17):     const from = (page - 1) * PAGE_SIZE;
+server.js   (dylan toth on 11/07/2024 at 15:17):     const to = page * PAGE_SIZE - 1;
+server.js   (dylan toth on 11/07/2024 at 15:17):     try {
+server.js   (dylan toth on 11/07/2024 at 15:36):       let query = supabase
+server.js   (dylan toth on 11/07/2024 at 15:36):         .from("posts")
+server.js   (dylan toth on 11/07/2024 at 15:36):         .select(`*, likes (profile_id, isLiked)`, { count: "exact" })
+server.js   (dylan toth on 11/07/2024 at 15:36):         .order("created_at", { ascending: false })
+server.js   (dylan toth on 11/07/2024 at 15:36):         .range(from, to);
+server.js   (dylan toth on 11/07/2024 at 15:36):       if (filter === "following" && followedUserIds.length > 0) {
+server.js   (dylan toth on 11/07/2024 at 17:19):         query = query.in("profile_id", followedUserIds); // Ensure "profile_id" is the correct field for author
+server.js   (dylan toth on 11/07/2024 at 15:36):       }
+server.js   (dylan toth on 11/07/2024 at 15:36):       const { data: recentPosts, error, count } = await query;
+server.js   (dylan toth on 11/07/2024 at 15:17):       if (error) {
+server.js   (dylan toth on 11/07/2024 at 15:36):         console.error("Error fetching recent posts and likes:", error);
+server.js   (dylan toth on 11/07/2024 at 15:17):         return new Response(
+server.js   (dylan toth on 11/07/2024 at 15:17):           JSON.stringify({
+server.js   (dylan toth on 11/07/2024 at 15:17):             success: false,
+server.js   (dylan toth on 11/07/2024 at 15:36):             message: "Error fetching recent posts.",
+server.js   (dylan toth on 11/07/2024 at 15:17):             posts: [],
+server.js   (dylan toth on 11/07/2024 at 15:17):             nextPage: null,
+server.js   (dylan toth on 11/07/2024 at 15:17):           }),
+server.js   (dylan toth on 11/07/2024 at 15:36):           { status: 500, headers: { "Content-Type": "application/json" } }
+server.js   (dylan toth on 11/07/2024 at 15:17):         );
+server.js   (dylan toth on 11/07/2024 at 15:17):       }
+server.js   (dylan toth on 11/07/2024 at 15:36):       data = recentPosts;
+server.js   (dylan toth on 11/07/2024 at 15:36):       totalCount = count;
+server.js   (dylan toth on 11/07/2024 at 15:36):     } catch (exception) {
+server.js   (dylan toth on 11/07/2024 at 15:36):       console.error("Unexpected error fetching recent posts:", exception);
+server.js   (dylan toth on 11/07/2024 at 15:36):       return new Response(
+server.js   (dylan toth on 11/07/2024 at 15:36):         JSON.stringify({
+server.js   (dylan toth on 11/07/2024 at 15:36):           success: false,
+server.js   (dylan toth on 11/07/2024 at 15:36):           message: "Unexpected error fetching recent posts.",
+server.js   (dylan toth on 11/07/2024 at 15:36):           posts: [],
+server.js   (dylan toth on 11/07/2024 at 15:36):           nextPage: null,
+server.js   (dylan toth on 11/07/2024 at 15:36):         }),
+server.js   (dylan toth on 11/07/2024 at 15:36):         { status: 500, headers: { "Content-Type": "application/json" } }
+server.js   (dylan toth on 11/07/2024 at 15:36):       );
+server.js   (dylan toth on 11/07/2024 at 15:36):     }
+server.js   (dylan toth on 11/07/2024 at 15:36):   } else if (sort === "popular") {
+server.js   (dylan toth on 11/07/2024 at 15:36):     // Handling "popular" sort: Fetch all relevant posts, compute net likes, sort, and paginate
+server.js   (dylan toth on 11/07/2024 at 15:36):     try {
+server.js   (dylan toth on 11/07/2024 at 15:36):       // Build the base query
+server.js   (dylan toth on 11/07/2024 at 15:36):       let query = supabase
+server.js   (dylan toth on 11/07/2024 at 15:36):         .from("posts")
+server.js   (dylan toth on 11/07/2024 at 15:36):         .select(`*, likes (profile_id, isLiked)`, { count: "exact" });
+server.js   (dylan toth on 11/07/2024 at 15:36):       if (filter === "following" && followedUserIds.length > 0) {
+server.js   (dylan toth on 11/07/2024 at 17:19):         query = query.in("profile_id", followedUserIds); // Ensure "profile_id" is the correct field for author
+server.js   (dylan toth on 11/07/2024 at 15:36):       }
+server.js   (dylan toth on 11/07/2024 at 15:36):       // Execute the query without pagination
+server.js   (dylan toth on 11/07/2024 at 15:36):       const { data: allPosts, error, count } = await query;
+server.js   (dylan toth on 11/07/2024 at 15:36):       if (error) {
+server.js   (dylan toth on 11/07/2024 at 15:36):         console.error("Error fetching all posts and likes for popular sort:", error);
+server.js   (dylan toth on 11/07/2024 at 15:36):         return new Response(
+server.js   (dylan toth on 11/07/2024 at 15:36):           JSON.stringify({
+server.js   (dylan toth on 11/07/2024 at 15:36):             success: false,
+server.js   (dylan toth on 11/07/2024 at 15:36):             message: "Error fetching popular posts.",
+server.js   (dylan toth on 11/07/2024 at 15:36):             posts: [],
+server.js   (dylan toth on 11/07/2024 at 15:36):             nextPage: null,
+server.js   (dylan toth on 11/07/2024 at 15:36):           }),
+server.js   (dylan toth on 11/07/2024 at 15:36):           { status: 500, headers: { "Content-Type": "application/json" } }
+server.js   (dylan toth on 11/07/2024 at 15:36):         );
+server.js   (dylan toth on 11/07/2024 at 15:36):       }
+server.js   (dylan toth on 11/07/2024 at 15:17):       // Compute net likes for each post
+server.js   (dylan toth on 11/07/2024 at 15:36):       const formattedPosts = allPosts.map((post) => {
+server.js   (dylan toth on 11/07/2024 at 15:36):         const likeCount = post.likes.filter((like) => like.isLiked).length;
+server.js   (dylan toth on 11/07/2024 at 15:36):         const dislikeCount = post.likes.filter((like) => !like.isLiked).length;
+server.js   (dylan toth on 11/07/2024 at 15:17):         const netLikes = likeCount - dislikeCount;
+server.js   (dylan toth on 11/07/2024 at 15:17):         return {
+server.js   (dylan toth on 11/07/2024 at 15:17):           ...post,
+server.js   (dylan toth on 11/07/2024 at 15:17):           likeCount,
+server.js   (dylan toth on 11/07/2024 at 15:17):           dislikeCount,
+server.js   (dylan toth on 11/07/2024 at 15:17):           netLikes,
+server.js   (dylan toth on 11/07/2024 at 15:17):         };
+server.js   (dylan toth on 11/07/2024 at 15:17):       });
+server.js   (dylan toth on 11/07/2024 at 15:17):       // Sort posts based on netLikes in descending order (most popular first)
+server.js   (dylan toth on 11/07/2024 at 15:17):       formattedPosts.sort((a, b) => b.netLikes - a.netLikes);
+server.js   (dylan toth on 11/07/2024 at 15:36):       // Calculate pagination indices
+server.js   (dylan toth on 11/07/2024 at 15:36):       const from = (page - 1) * PAGE_SIZE;
+server.js   (dylan toth on 11/07/2024 at 15:36):       const to = page * PAGE_SIZE;
+server.js   (dylan toth on 11/07/2024 at 15:36):       // Slice the sorted array to get the current page's posts
+server.js   (dylan toth on 11/07/2024 at 15:36):       const paginatedPosts = formattedPosts.slice(from, to);
+server.js   (dylan toth on 11/07/2024 at 15:36):       data = paginatedPosts;
+server.js   (dylan toth on 11/07/2024 at 15:36):       totalCount = formattedPosts.length;
+server.js   (dylan toth on 11/07/2024 at 15:36):     } catch (exception) {
+server.js   (dylan toth on 11/07/2024 at 15:36):       console.error("Unexpected error processing popular posts:", exception);
+server.js   (dylan toth on 11/07/2024 at 15:17):       return new Response(
+server.js   (dylan toth on 11/07/2024 at 15:17):         JSON.stringify({
+server.js   (dylan toth on 11/07/2024 at 15:36):           success: false,
+server.js   (dylan toth on 11/07/2024 at 15:36):           message: "Unexpected error processing popular posts.",
+server.js   (dylan toth on 11/07/2024 at 15:36):           posts: [],
+server.js   (dylan toth on 11/07/2024 at 15:36):           nextPage: null,
+server.js   (dylan toth on 11/07/2024 at 15:17):         }),
+server.js   (dylan toth on 11/07/2024 at 15:36):         { status: 500, headers: { "Content-Type": "application/json" } }
+server.js   (dylan toth on 11/07/2024 at 15:17):       );
+server.js   (dylan toth on 11/07/2024 at 15:36):     }
+server.js   (dylan toth on 11/07/2024 at 17:19):   } else if (sort === "asc" || sort === "desc") {
+server.js   (dylan toth on 11/07/2024 at 17:19):     // Handling "rating" sort: Fetch paginated posts sorted by rating ascending or descending
+server.js   (dylan toth on 11/07/2024 at 17:19):     const sortOrder = sort === "asc" ? "asc" : "desc";
+server.js   (dylan toth on 11/07/2024 at 17:19):     const from = (page - 1) * PAGE_SIZE;
+server.js   (dylan toth on 11/07/2024 at 17:19):     const to = page * PAGE_SIZE - 1;
+server.js   (dylan toth on 11/07/2024 at 17:19):     try {
+server.js   (dylan toth on 11/07/2024 at 17:19):       let query = supabase
+server.js   (dylan toth on 11/07/2024 at 17:19):         .from("posts")
+server.js   (dylan toth on 11/07/2024 at 17:19):         .select(`*, likes (profile_id, isLiked)`, { count: "exact" })
+server.js   (dylan toth on 11/07/2024 at 17:19):         .order("rating", { ascending: sortOrder === "asc" })
+server.js   (dylan toth on 11/07/2024 at 17:19):         .range(from, to);
+server.js   (dylan toth on 11/07/2024 at 17:19):       if (filter === "following" && followedUserIds.length > 0) {
+server.js   (dylan toth on 11/07/2024 at 17:19):         query = query.in("profile_id", followedUserIds); // Ensure "profile_id" is the correct field for author
+server.js   (dylan toth on 11/07/2024 at 17:19):       }
+server.js   (dylan toth on 11/07/2024 at 17:19):       const { data: ratingSortedPosts, error, count } = await query;
+server.js   (dylan toth on 11/07/2024 at 17:19):       if (error) {
+server.js   (dylan toth on 11/07/2024 at 17:19):         console.error("Error fetching rating-sorted posts and likes:", error);
+server.js   (dylan toth on 11/07/2024 at 17:19):         return new Response(
+server.js   (dylan toth on 11/07/2024 at 17:19):           JSON.stringify({
+server.js   (dylan toth on 11/07/2024 at 17:19):             success: false,
+server.js   (dylan toth on 11/07/2024 at 17:19):             message: "Error fetching rating-sorted posts.",
+server.js   (dylan toth on 11/07/2024 at 17:19):             posts: [],
+server.js   (dylan toth on 11/07/2024 at 17:19):             nextPage: null,
+server.js   (dylan toth on 11/07/2024 at 17:19):           }),
+server.js   (dylan toth on 11/07/2024 at 17:19):           { status: 500, headers: { "Content-Type": "application/json" } }
+server.js   (dylan toth on 11/07/2024 at 17:19):         );
+server.js   (dylan toth on 11/07/2024 at 17:19):       }
+server.js   (dylan toth on 11/07/2024 at 17:19):       data = ratingSortedPosts;
+server.js   (dylan toth on 11/07/2024 at 17:19):       totalCount = count;
+server.js   (dylan toth on 11/07/2024 at 17:19):     } catch (exception) {
+server.js   (dylan toth on 11/07/2024 at 17:19):       console.error("Unexpected error fetching rating-sorted posts:", exception);
+server.js   (dylan toth on 11/07/2024 at 17:19):       return new Response(
+server.js   (dylan toth on 11/07/2024 at 17:19):         JSON.stringify({
+server.js   (dylan toth on 11/07/2024 at 17:19):           success: false,
+server.js   (dylan toth on 11/07/2024 at 17:19):           message: "Unexpected error fetching rating-sorted posts.",
+server.js   (dylan toth on 11/07/2024 at 17:19):           posts: [],
+server.js   (dylan toth on 11/07/2024 at 17:19):           nextPage: null,
+server.js   (dylan toth on 11/07/2024 at 17:19):         }),
+server.js   (dylan toth on 11/07/2024 at 17:19):         { status: 500, headers: { "Content-Type": "application/json" } }
+server.js   (dylan toth on 11/07/2024 at 17:19):       );
+server.js   (dylan toth on 11/07/2024 at 17:19):     }
+server.js   (dylan toth on 11/07/2024 at 15:36):   } else {
+server.js   (dylan toth on 11/07/2024 at 15:36):     // Handle other sorting options if necessary
+server.js   (dylan toth on 11/07/2024 at 15:36):     console.warn(`Unknown sort option: ${sort}. Defaulting to recent.`);
+server.js   (dylan toth on 11/07/2024 at 15:36):     // Default to recent sort if an unknown sort option is provided
+server.js   (dylan toth on 11/07/2024 at 15:36):     const from = (page - 1) * PAGE_SIZE;
+server.js   (dylan toth on 11/07/2024 at 15:36):     const to = page * PAGE_SIZE - 1;
+server.js   (dylan toth on 11/07/2024 at 15:36):     try {
+server.js   (dylan toth on 11/07/2024 at 15:36):       let query = supabase
+server.js   (dylan toth on 11/07/2024 at 15:36):         .from("posts")
+server.js   (dylan toth on 11/07/2024 at 15:36):         .select(`*, likes (profile_id, isLiked)`, { count: "exact" })
+server.js   (dylan toth on 11/07/2024 at 15:36):         .order("created_at", { ascending: false })
+server.js   (dylan toth on 11/07/2024 at 15:36):         .range(from, to);
+server.js   (dylan toth on 11/07/2024 at 15:36):       if (filter === "following" && followedUserIds.length > 0) {
+server.js   (dylan toth on 11/07/2024 at 17:19):         query = query.in("profile_id", followedUserIds); // Ensure "profile_id" is the correct field for author
+server.js   (dylan toth on 11/07/2024 at 15:36):       }
+server.js   (dylan toth on 11/07/2024 at 15:36):       const { data: unknownSortPosts, error, count } = await query;
+server.js   (dylan toth on 11/07/2024 at 15:36):       if (error) {
+server.js   (dylan toth on 11/07/2024 at 15:36):         console.error("Error fetching posts and likes with unknown sort:", error);
+server.js   (dylan toth on 11/07/2024 at 15:36):         return new Response(
+server.js   (dylan toth on 11/07/2024 at 15:36):           JSON.stringify({
+server.js   (dylan toth on 11/07/2024 at 15:36):             success: false,
+server.js   (dylan toth on 11/07/2024 at 15:36):             message: "Error fetching posts with unknown sort.",
+server.js   (dylan toth on 11/07/2024 at 15:36):             posts: [],
+server.js   (dylan toth on 11/07/2024 at 15:36):             nextPage: null,
+server.js   (dylan toth on 11/07/2024 at 15:36):           }),
+server.js   (dylan toth on 11/07/2024 at 15:36):           { status: 500, headers: { "Content-Type": "application/json" } }
+server.js   (dylan toth on 11/07/2024 at 15:36):         );
+server.js   (dylan toth on 11/07/2024 at 15:36):       }
+server.js   (dylan toth on 11/07/2024 at 15:36):       data = unknownSortPosts;
+server.js   (dylan toth on 11/07/2024 at 15:36):       totalCount = count;
+server.js   (dylan toth on 11/07/2024 at 15:17):     } catch (exception) {
+server.js   (dylan toth on 11/07/2024 at 15:36):       console.error("Unexpected error with unknown sort option:", exception);
+server.js   (dylan toth on 11/07/2024 at 15:17):       return new Response(
+server.js   (dylan toth on 11/07/2024 at 15:17):         JSON.stringify({
+server.js   (dylan toth on 11/07/2024 at 15:17):           success: false,
+server.js   (dylan toth on 11/07/2024 at 15:36):           message: "Unexpected error with unknown sort option.",
+server.js   (dylan toth on 11/07/2024 at 15:17):           posts: [],
+server.js   (dylan toth on 11/07/2024 at 15:17):           nextPage: null,
+server.js   (dylan toth on 11/07/2024 at 15:17):         }),
+server.js   (dylan toth on 11/07/2024 at 15:36):         { status: 500, headers: { "Content-Type": "application/json" } }
+server.js   (dylan toth on 11/07/2024 at 15:17):       );
+server.js   (dylan toth on 11/07/2024 at 15:17):     }
+server.js   (dylan toth on 11/07/2024 at 15:36):   // Prepare the posts with additional like data
+server.js   (dylan toth on 11/07/2024 at 15:17):   const postsWithLikeData = data.map((post) => ({
+server.js   (dylan toth on 11/07/2024 at 15:36):     // Include computed fields for popular sort
+server.js   (dylan toth on 11/07/2024 at 15:36):     ...(sort === "popular" && {
+server.js   (dylan toth on 11/07/2024 at 15:36):       dislikeCount: post.dislikeCount,
+server.js   (dylan toth on 11/07/2024 at 15:36):       netLikes: post.netLikes,
+server.js   (dylan toth on 11/07/2024 at 15:36):     }),
+server.js   (dylan toth on 11/07/2024 at 15:36):   // Determine if there is a next page
+server.js   (dylan toth on 11/07/2024 at 15:36):   let hasNextPage = false;
+server.js   (dylan toth on 11/07/2024 at 15:36):   if (sort === "popular") {
+server.js   (dylan toth on 11/07/2024 at 15:36):     // For popular sort, totalCount is the total number of filtered and sorted posts
+server.js   (dylan toth on 11/07/2024 at 15:36):     hasNextPage = page * PAGE_SIZE < totalCount;
+server.js   (dylan toth on 11/07/2024 at 17:19):   } else if (sort === "asc" || sort === "desc") {
+server.js   (dylan toth on 11/07/2024 at 17:19):     // For rating sort, totalCount is the total number of filtered posts
+server.js   (dylan toth on 11/07/2024 at 17:19):     hasNextPage = page * PAGE_SIZE < totalCount;
+server.js   (dylan toth on 11/07/2024 at 15:36):   } else {
+server.js   (dylan toth on 11/07/2024 at 15:36):     // For recent sort, totalCount is the total number of filtered posts
+server.js   (dylan toth on 11/07/2024 at 15:36):     hasNextPage = page * PAGE_SIZE < totalCount;
+server.js   (dylan toth on 11/07/2024 at 15:36):   }
+server.js   (dylan toth on 11/07/2024 at 15:36):   // Return the final response
+server.js   (dylan toth on 11/07/2024 at 15:17):   return new Response(
+server.js   (dylan toth on 11/07/2024 at 15:17):     JSON.stringify({
+server.js   (dylan toth on 11/07/2024 at 15:17):       success: true,
+server.js   (dylan toth on 11/07/2024 at 15:17):       posts: postsWithLikeData ?? [],
+server.js   (dylan toth on 11/07/2024 at 15:17):       nextPage: nextPage,
+server.js   (dylan toth on 11/07/2024 at 15:17):     }),
+server.js   (dylan toth on 11/07/2024 at 15:17):     { status: 200, headers: { "Content-Type": "application/json" } }
+server.js   (dylan toth on 11/07/2024 at 15:17):   );
+server.js   (dylan toth on 11/07/2024 at 15:36): }
+page.svelte (dylan toth on 11/07/2024 at 17:19):   import Post from "$lib/post.svelte";
+page.svelte (dylan toth on 11/07/2024 at 17:19):     <Post
+page.svelte (dylan toth on 11/07/2024 at 17:19):     logged_in_user_uuid={logged_in_user_uuid}
+page.svelte (dylan toth on 11/07/2024 at 17:19):     uuid={review.profile_id}
+page.svelte (dylan toth on 11/07/2024 at 17:19):     rating={review.rating}
+page.svelte (dylan toth on 11/07/2024 at 17:19):     desc={review.content}
+page.svelte (dylan toth on 11/07/2024 at 17:19):     song_id={review.song_id}
+page.svelte (dylan toth on 11/07/2024 at 17:19):     song_title={songDetails.title}
+page.svelte (dylan toth on 11/07/2024 at 17:19):     song_artist={songDetails.artist}
+page.svelte (dylan toth on 11/07/2024 at 17:19):     song_image={songDetails.image_url}
+page.svelte (dylan toth on 11/07/2024 at 17:19):     likes_cnt={review.likes_count}
+page.svelte (dylan toth on 11/07/2024 at 17:19):     post_id={review.id}
+page.svelte (dylan toth on 11/07/2024 at 17:19):     created_at={review.created_at}
+page.svelte (dylan toth on 11/07/2024 at 17:19):   ></Post>
+page.svelte (dylan toth on 11/07/2024 at 17:19):     transform: translate(0%, 0);
+page.svelte (dylan toth on 11/07/2024 at 17:19):     width: 80%;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     justify-content: center; /* Center horizontally */
+page.svelte (dylan toth on 11/07/2024 at 17:19):     text-align: center; /* Center text */
+page.svelte (dylan toth on 11/07/2024 at 17:19):     width: 300px;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     height: 300px;
+page.svelte (dylan toth on 11/07/2024 at 17:19):   .song-info {
+page.svelte (dylan toth on 11/07/2024 at 17:19):     text-align: center; /* Center text */
+page.svelte (dylan toth on 11/07/2024 at 17:19):   }
+page.svelte (dylan toth on 11/07/2024 at 17:19):   h2 {
+page.svelte (dylan toth on 11/07/2024 at 17:19):     text-align: center; /* Center the h2 reviews text */
+page.svelte (dylan toth on 11/07/2024 at 17:19):   }
+page.svelte (dylan toth on 11/07/2024 at 17:19):     background-color: #121212;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     border: none;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15): <script>
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):     // No additional script needed
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):   </script>
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):   <div class="video-container">
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):     <iframe
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       src="https://www.youtube.com/embed/7d_TkHApCVQ?autoplay=1&loop=1&playlist=7d_TkHApCVQ&mute=1&controls=0&modestbranding=1&rel=0&iv_load_policy=3&disablekb=1&fs=0"
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       frameborder="0"
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       allow="autoplay; encrypted-media"
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       allowfullscreen
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       class="video-iframe"
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):     ></iframe>
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):     <div class="video-mask"></div>
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):   </div>
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):   <style>
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):     .video-container {
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       position: absolute;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       top: 0;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       left: 0;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       width: 100%;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       height: 100%;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       overflow: hidden;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):     }
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):     .video-iframe {
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       width: 100%;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       height: 100%;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       border: none;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):     }
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):     .video-mask {
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       position: absolute;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       top: 0;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       left: 0;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       width: 100%;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       height: 100%;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       background: rgba(0, 0, 0, 0.0);
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       pointer-events: none; 
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       z-index: 1;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):     }
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):     .video-mask::after {
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       content: "";
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       position: absolute;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       top: 50%;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       left: 50%;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       width: 230px;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       height: 300px;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       transform: translate(-50%, -50%);
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       background: rgba(0, 0, 0, 0); 
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       box-shadow: 0 0 0 9999px #121212;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       border-radius: 8px;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):     }
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):     @media (max-width: 768px) {
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       .video-mask::after {
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):         width: 150px;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):         height: 150px;
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):       }
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):     }
VideoEmbed.svelte (dylan toth on 11/02/2024 at 22:15):   </style>
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):   import { supabase } from '$lib/supabaseClient'; // Ensure this path is correct in your project
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):   import { vinylBalance, fetchVinylBalance, addVinyls } from '$lib/vinylsStore.js';
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):   let user = null;
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):   let balance = 0;
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):   const ballCost = 10;
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):   let graph = Array(15).fill(0);
Plinko.svelte (dylan toth on 11/02/2024 at 22:15):   let scoreSound;
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):   onMount(async () => {
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     // Fetch user session
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     const { data: sessionData, error: sessionError } = await supabase.auth.getSession();
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     user = sessionData?.session?.user;
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     if (user) {
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):       await fetchVinylBalance(user.id)
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):       // Fetch user's vinyl balance
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):       vinylBalance.subscribe(value => {
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):                 balance = value;
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):             });
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     } else {
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):       message = 'Please log in to play the game.';
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     }
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     // Initialize score sound if you have one
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     // scoreSound = new Audio('path_to_your_score_sound.mp3'); // Uncomment and set the correct path
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):   // Update balance in the database whenever it changes
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):   // $: if (user && balance !== undefined) {
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):   //   updateBalanceInDatabase();
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):   // }
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):   // async function updateBalanceInDatabase() {
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):   //   const { error } = await supabase
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):   //     .from('profiles')
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):   //     .update({ vinyls: balance })
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):   //     .eq('id', user.id);
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):   //   if (error) {
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):   //     console.error('Error updating vinyl balance:', error);
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):   //     message = 'Error updating balance. Please try again.';
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):   //   }
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):   // }
Plinko.svelte (dylan toth on 11/02/2024 at 22:15):         background: '#333333',
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     // Create boundaries
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):       // Top boundary
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):       // Bottom boundary
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):       // Right boundary
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):       // Left boundary
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):       if (!user) {
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):         message = 'Please log in to play the game.';
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):         return;
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):       }
Plinko.svelte (dylan toth on 11/02/2024 at 22:15):       balance -= ballCost;
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):       addVinyls(user.id, -ballCost)
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):       message = ''; // Clear any previous messages
Plinko.svelte (dylan toth on 11/02/2024 at 22:15):       const randomOffset = (Math.random() + Math.random() + Math.random() - 1.5) * 20;
Plinko.svelte (dylan toth on 11/02/2024 at 22:15):       const xPosition = 300 + randomOffset;
Plinko.svelte (dylan toth on 11/02/2024 at 22:15):           mask: defaultCategory,
Plinko.svelte (dylan toth on 11/02/2024 at 22:15):           lineWidth: 3,
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):             texture: 'logo.svg', // Update this path if needed
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):             // balance += winnings;
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):             // balance = parseFloat(balance.toFixed(2));
Plinko.svelte (dylan toth on 11/06/2024 at 21:43):             addVinyls(user.id, winnings)
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):             // Play sound on scoring if you have one
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):             // scoreSound.play();
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     const pegSpacingX = 45;
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     const pegSpacingY = 40;
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     const startX = 300;
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):       const cols = row + 3;
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):         const y = 80 + row * pegSpacingY;
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):         const peg = Bodies.circle(x, y, 4, {
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):       const y = slotYPosition - 30;
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):       const peg = Bodies.circle(x, y, 4, {
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):       text.style.top = `${render.options.height - 50}px`;
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):       text.style.fontSize = '12px';
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     const middle = Math.floor(totalSlots / 2);
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     const fullMultipliers = [...multipliers.slice(), ...multipliers];
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     const distanceFromMiddle = Math.abs(index - middle);
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     return fullMultipliers[distanceFromMiddle];
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):   }
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     {#if user}
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):       <span class="font-bold">Balance:</span> <span>{balance} Vinyls</span>
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     {:else}
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):       <span>Please log in to see your balance.</span>
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     {/if}
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     disabled={!user || balance < ballCost}
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     background-color: #333333;
Plinko.svelte (dylan toth on 11/06/2024 at 21:14):     font-size: 12px;
sidebar.svelte (dylan toth on 11/12/2024 at 12:30):   import {  sidebarHidden } from "$lib/stores";
sidebar.svelte (dylan toth on 11/12/2024 at 12:30): <div class="sidebar {pinnedSidebar ? 'pinned' : ''} {isSidebarHidden ? '' : 'sidebarHidden'}">
sidebar.svelte (dylan toth on 11/12/2024 at 12:30):     /* cursor: grab; */
sidebar.svelte (dylan toth on 11/12/2024 at 12:30):     /* cursor: grabbing; */
+page.svelte (dylan toth on 11/06/2024 at 21:14): <script>
+page.svelte (dylan toth on 11/06/2024 at 21:14):     import { onMount, onDestroy } from 'svelte';
+page.svelte (dylan toth on 11/06/2024 at 21:14):     import { supabase } from '$lib/supabaseClient.js'; // Ensure this path is correct
+page.svelte (dylan toth on 11/06/2024 at 21:43):     import { vinylBalance, fetchVinylBalance, addVinyls } from '$lib/vinylsStore.js';
+page.svelte (dylan toth on 11/06/2024 at 21:14):     let user = null;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     let balance = 0;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     let message = '';
+page.svelte (dylan toth on 11/06/2024 at 21:14):     let isGameOver = false;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     let gameStarted = false; // State to track if the game has started
+page.svelte (dylan toth on 11/06/2024 at 21:14):     // Game Elements
+page.svelte (dylan toth on 11/06/2024 at 21:14):     let bird;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     let gameContainer;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     let ground;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     let runVinylCount = 0;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     // Game State Variables
+page.svelte (dylan toth on 11/06/2024 at 21:14):     let birdLeft = 220; // Defined at top level
+page.svelte (dylan toth on 11/06/2024 at 21:14):     let birdBottom = 400; // Updated from 100 to 400 to position bird within the gap
+page.svelte (dylan toth on 11/06/2024 at 21:14):     // Timers
+page.svelte (dylan toth on 11/06/2024 at 21:14):     let gameTimerId;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     let obstacleTimers = []; // Array to track multiple obstacle timers
+page.svelte (dylan toth on 11/06/2024 at 21:14):     let obstacleGeneratorTimerId; // Timer for generating obstacles
+page.svelte (dylan toth on 11/06/2024 at 21:14):     // Constants
+page.svelte (dylan toth on 11/06/2024 at 21:14):     const gravity = 2; // Reduced gravity for smoother gameplay
+page.svelte (dylan toth on 11/06/2024 at 21:14):     const jumpHeight = 50;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     const birdWidth = 60; // Width of the bird in pixels
+page.svelte (dylan toth on 11/06/2024 at 21:14):     const birdHeight = 45; // Height of the bird in pixels
+page.svelte (dylan toth on 11/06/2024 at 21:14):     const pipeWidth = 60; // Width of the pipes in pixels
+page.svelte (dylan toth on 11/06/2024 at 21:14):     const pipeHeight = 300; // Height of the pipes in pixels
+page.svelte (dylan toth on 11/06/2024 at 21:14):     const gap = 150; // Gap between top and bottom pipes in pixels
+page.svelte (dylan toth on 11/06/2024 at 21:14):     // Sound Effect (Optional)
+page.svelte (dylan toth on 11/06/2024 at 21:14):     let scoreSound;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     // Function to fetch user session and balance
+page.svelte (dylan toth on 11/06/2024 at 21:14):     async function fetchUser() {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         console.log('Fetching user session...');
+page.svelte (dylan toth on 11/06/2024 at 21:14):         const { data: sessionData, error: sessionError } = await supabase.auth.getSession();
+page.svelte (dylan toth on 11/06/2024 at 21:14):         if (sessionError) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):             console.error('Session Error:', sessionError);
+page.svelte (dylan toth on 11/06/2024 at 21:14):             message = 'Error fetching session. Please try again.';
+page.svelte (dylan toth on 11/06/2024 at 21:14):             return;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         }
+page.svelte (dylan toth on 11/06/2024 at 21:14):         user = sessionData?.session?.user;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         console.log('User fetched:', user);
+page.svelte (dylan toth on 11/06/2024 at 21:14):         if (user) {
+page.svelte (dylan toth on 11/06/2024 at 21:43):             vinylBalance.subscribe(value => {
+page.svelte (dylan toth on 11/06/2024 at 21:43):                 balance = value;
+page.svelte (dylan toth on 11/06/2024 at 21:43):             });
+page.svelte (dylan toth on 11/06/2024 at 21:14):         } else {
+page.svelte (dylan toth on 11/06/2024 at 21:14):             message = 'Please log in to play the game.';
+page.svelte (dylan toth on 11/06/2024 at 21:14):             console.log('No user logged in.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):         }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     // Function to update vinyl balance in the database
+page.svelte (dylan toth on 11/06/2024 at 21:14):     async function updateBalance(newBalance) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         if (!user) return;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         console.log(`Updating vinyl balance to ${newBalance} for user ID: ${user.id}`);
+page.svelte (dylan toth on 11/06/2024 at 21:14):         const { error } = await supabase
+page.svelte (dylan toth on 11/06/2024 at 21:14):             .from('profiles')
+page.svelte (dylan toth on 11/06/2024 at 21:14):             .update({ vinyls: newBalance })
+page.svelte (dylan toth on 11/06/2024 at 21:14):             .eq('id', user.id);
+page.svelte (dylan toth on 11/06/2024 at 21:14):         if (error) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):             console.error('Error updating vinyl balance:', error);
+page.svelte (dylan toth on 11/06/2024 at 21:14):             message = 'Error updating balance. Please try again.';
+page.svelte (dylan toth on 11/06/2024 at 21:14):         } else {
+page.svelte (dylan toth on 11/06/2024 at 21:14):             console.log('Vinyl balance updated successfully.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):         }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     // Function to award a vinyl
+page.svelte (dylan toth on 11/06/2024 at 21:43):     async function awardVinyl(amount = 1) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         if (!user) return;
+page.svelte (dylan toth on 11/06/2024 at 21:43):         const success = await addVinyls(user.id, amount);
+page.svelte (dylan toth on 11/06/2024 at 22:58):         runVinylCount += amount;
+page.svelte (dylan toth on 11/06/2024 at 21:43):         if (success) {
+page.svelte (dylan toth on 11/06/2024 at 21:43):             message = `You earned ${amount} Vinyl${amount > 1 ? 's' : ''}!`;
+page.svelte (dylan toth on 11/06/2024 at 21:43):             // Optionally, show a toast or animation
+page.svelte (dylan toth on 11/06/2024 at 21:43):         } else {
+page.svelte (dylan toth on 11/06/2024 at 21:43):             message = 'Failed to award Vinyls.';
+page.svelte (dylan toth on 11/06/2024 at 21:43):         }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     // Function to start the game loop
+page.svelte (dylan toth on 11/06/2024 at 21:14):     function startGameLoop() {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         if (isGameOver) return;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         birdBottom -= gravity;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         bird.style.bottom = birdBottom + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):         bird.style.left = birdLeft + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):         // console.log(`Bird position - Left: ${birdLeft}, Bottom: ${birdBottom}`);
+page.svelte (dylan toth on 11/06/2024 at 21:14):         if (birdBottom <= 0) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):             console.log('Bird has hit the ground.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):             gameOver();
+page.svelte (dylan toth on 11/06/2024 at 21:14):         }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     // Jump control
+page.svelte (dylan toth on 11/06/2024 at 21:14):     function control(e) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         if (e.key === ' ' || e.code === 'Space') {
+page.svelte (dylan toth on 11/06/2024 at 21:14):             e.preventDefault(); // Prevent page from scrolling
+page.svelte (dylan toth on 11/06/2024 at 21:14):             jump();
+page.svelte (dylan toth on 11/06/2024 at 21:14):         }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     function jump() {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         if (isGameOver) return;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         if (birdBottom < (gameContainer.clientHeight - ground.clientHeight) - birdHeight) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):             birdBottom += jumpHeight;
+page.svelte (dylan toth on 11/06/2024 at 21:14):             bird.style.bottom = birdBottom + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):             console.log(`Bird jumped to position - Bottom: ${birdBottom}`);
+page.svelte (dylan toth on 11/06/2024 at 21:14):             // Optionally play sound on jump
+page.svelte (dylan toth on 11/06/2024 at 21:14):             if (scoreSound) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 scoreSound.currentTime = 0;
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 scoreSound.play();
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 console.log('Jump sound played.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):             }
+page.svelte (dylan toth on 11/06/2024 at 21:14):         } else {
+page.svelte (dylan toth on 11/06/2024 at 21:14):             console.log('Jump ignored: Bird is at maximum height.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):         }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     // Function to generate obstacles
+page.svelte (dylan toth on 11/06/2024 at 21:14):     function generateObstacle() {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         if (isGameOver) return;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         let obstacleLeft = gameContainer.clientWidth;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         const pipeWidthLocal = pipeWidth; // Use global constant
+page.svelte (dylan toth on 11/06/2024 at 21:14):         const pipeHeightLocal = pipeHeight; // Use global constant
+page.svelte (dylan toth on 11/06/2024 at 21:14):         // Ensure obstacleBottom is set to prevent immediate collision
+page.svelte (dylan toth on 11/06/2024 at 21:14):         const minObstacleBottom = 200; // Minimum height to ensure space for the bird
+page.svelte (dylan toth on 11/06/2024 at 21:14):         const maxObstacleBottom = gameContainer.clientHeight - ground.clientHeight - pipeHeightLocal - gap - minObstacleBottom;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         const obstacleBottom = minObstacleBottom + Math.random() * maxObstacleBottom;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         const obstacleTop = obstacleBottom + pipeHeightLocal + gap;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         console.log(`Generating new obstacles at left: ${obstacleLeft}, bottom: ${obstacleBottom}`);
+page.svelte (dylan toth on 11/06/2024 at 21:14):         const obstacle = document.createElement('div');
+page.svelte (dylan toth on 11/06/2024 at 21:14):         const topObstacle = document.createElement('div');
+page.svelte (dylan toth on 11/06/2024 at 21:14):         obstacle.classList.add('obstacle');
+page.svelte (dylan toth on 11/06/2024 at 21:14):         topObstacle.classList.add('topObstacle');
+page.svelte (dylan toth on 11/06/2024 at 21:14):         // Initialize obstacle as not passed
+page.svelte (dylan toth on 11/06/2024 at 21:14):         obstacle.dataset.passed = 'false';
+page.svelte (dylan toth on 11/06/2024 at 21:14):         topObstacle.dataset.passed = 'false';
+page.svelte (dylan toth on 11/06/2024 at 21:14):         gameContainer.appendChild(obstacle);
+page.svelte (dylan toth on 11/06/2024 at 21:14):         gameContainer.appendChild(topObstacle);
+page.svelte (dylan toth on 11/06/2024 at 21:14):         obstacle.style.left = obstacleLeft + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):         topObstacle.style.left = obstacleLeft + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):         obstacle.style.bottom = obstacleBottom + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):         topObstacle.style.bottom = obstacleBottom + pipeHeightLocal + gap + 'px'; // Position top obstacle from bottom
+page.svelte (dylan toth on 11/06/2024 at 21:14):         console.log(`Obstacle positioned at Left: ${obstacleLeft}, Bottom: ${obstacleBottom}`);
+page.svelte (dylan toth on 11/06/2024 at 21:14):         console.log(`Top Obstacle positioned at Left: ${obstacleLeft}, Bottom: ${obstacleBottom + pipeHeightLocal + gap}`);
+page.svelte (dylan toth on 11/06/2024 at 21:14):         // Move obstacles
+page.svelte (dylan toth on 11/06/2024 at 21:14):         function moveObstacle() {
+page.svelte (dylan toth on 11/06/2024 at 21:14):             if (isGameOver) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 console.log('Game is over. Stopping obstacle movement.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 clearInterval(timerId);
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 return;
+page.svelte (dylan toth on 11/06/2024 at 21:14):             }
+page.svelte (dylan toth on 11/06/2024 at 21:14):             obstacleLeft -= 2;
+page.svelte (dylan toth on 11/06/2024 at 21:14):             obstacle.style.left = obstacleLeft + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):             topObstacle.style.left = obstacleLeft + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):             // Award vinyl if obstacle passes the bird
+page.svelte (dylan toth on 11/06/2024 at 21:14):             if (
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 obstacleLeft + pipeWidthLocal < birdLeft &&
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 obstacle.dataset.passed === 'false'
+page.svelte (dylan toth on 11/06/2024 at 21:14):             ) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 obstacle.dataset.passed = 'true';
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 topObstacle.dataset.passed = 'true';
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 console.log('Obstacle passed the bird. Awarding vinyl.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 awardVinyl();
+page.svelte (dylan toth on 11/06/2024 at 21:14):             }
+page.svelte (dylan toth on 11/06/2024 at 21:14):             // Collision detection
+page.svelte (dylan toth on 11/06/2024 at 21:14):             // Calculate relative positions
+page.svelte (dylan toth on 11/06/2024 at 21:14):             const birdRight = birdLeft + birdWidth;
+page.svelte (dylan toth on 11/06/2024 at 21:14):             const birdTop = birdBottom + birdHeight;
+page.svelte (dylan toth on 11/06/2024 at 21:14):             // Check if obstacle is overlapping horizontally with the bird
+page.svelte (dylan toth on 11/06/2024 at 21:14):             if (obstacleLeft < birdRight && obstacleLeft + pipeWidthLocal > birdLeft) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 console.log('Obstacle is horizontally overlapping with the bird.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 // Check collision with bottom obstacle
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 if (birdBottom+150 < obstacleBottom + pipeHeightLocal) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):                     // console.log('Bird has collided with the bottom obstacle.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):                     // console.log("bottom obstacle tallest point: ", obstacleBottom + pipeHeightLocal)
+page.svelte (dylan toth on 11/06/2024 at 21:14):                     gameOver();
+page.svelte (dylan toth on 11/06/2024 at 21:14):                     clearInterval(timerId);
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 }
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 // console.log("top opstacle lowest point: ", obstacleBottom + pipeHeightLocal + gap+300)
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 // Check collision with top obstacle
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 if (birdTop > obstacleBottom + pipeHeightLocal + gap-170) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):                     // console.log('Bird has collided with the top obstacle.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):                     gameOver();
+page.svelte (dylan toth on 11/06/2024 at 21:14):                     clearInterval(timerId);
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 }
+page.svelte (dylan toth on 11/06/2024 at 21:14):             }
+page.svelte (dylan toth on 11/06/2024 at 21:14):             // Remove obstacles that have moved off screen
+page.svelte (dylan toth on 11/06/2024 at 21:14):             if (obstacleLeft < -pipeWidthLocal) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 console.log('Obstacle has moved off screen. Removing obstacles.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 clearInterval(timerId);
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 gameContainer.removeChild(obstacle);
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 gameContainer.removeChild(topObstacle);
+page.svelte (dylan toth on 11/06/2024 at 21:14):             }
+page.svelte (dylan toth on 11/06/2024 at 21:14):         }
+page.svelte (dylan toth on 11/06/2024 at 21:14):         let timerId = setInterval(moveObstacle, 20);
+page.svelte (dylan toth on 11/06/2024 at 21:14):         obstacleTimers.push(timerId);
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     // Function to start generating obstacles at intervals
+page.svelte (dylan toth on 11/06/2024 at 21:14):     function startObstacleGenerator() {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         console.log('Starting obstacle generator.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):         obstacleGeneratorTimerId = setInterval(() => {
+page.svelte (dylan toth on 11/06/2024 at 21:14):             if (!isGameOver) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 generateObstacle();
+page.svelte (dylan toth on 11/06/2024 at 21:14):             }
+page.svelte (dylan toth on 11/06/2024 at 21:14):         }, 3000);
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     // Function to stop generating obstacles
+page.svelte (dylan toth on 11/06/2024 at 21:14):     function stopObstacleGenerator() {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         if (obstacleGeneratorTimerId) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):             console.log('Stopping obstacle generator.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):             clearInterval(obstacleGeneratorTimerId);
+page.svelte (dylan toth on 11/06/2024 at 21:14):         }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     // Function to start the game
+page.svelte (dylan toth on 11/06/2024 at 21:14):     function startGame() {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         if (gameStarted) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):             console.log('Game already started.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):             return;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         }
+page.svelte (dylan toth on 11/06/2024 at 21:14):         // Reset game state if game was over
+page.svelte (dylan toth on 11/06/2024 at 21:14):         if (isGameOver) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):             console.log('Restarting game.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):             isGameOver = false;
+page.svelte (dylan toth on 11/06/2024 at 21:14):             message = '';
+page.svelte (dylan toth on 11/06/2024 at 21:14):             // Reset bird position to within the gap
+page.svelte (dylan toth on 11/06/2024 at 21:14):             birdLeft = 220;
+page.svelte (dylan toth on 11/06/2024 at 21:14):             birdBottom = 400; // Updated from 100 to 400
+page.svelte (dylan toth on 11/06/2024 at 21:14):             bird.style.left = birdLeft + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):             bird.style.bottom = birdBottom + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):             console.log(`Bird position reset to Left: ${birdLeft}, Bottom: ${birdBottom}`);
+page.svelte (dylan toth on 11/06/2024 at 21:14):             // Remove existing obstacles
+page.svelte (dylan toth on 11/06/2024 at 21:14):             const obstacles = gameContainer.querySelectorAll('.obstacle, .topObstacle');
+page.svelte (dylan toth on 11/06/2024 at 21:14):             obstacles.forEach(obstacle => {
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 console.log('Removing existing obstacle:', obstacle);
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 gameContainer.removeChild(obstacle);
+page.svelte (dylan toth on 11/06/2024 at 21:14):             });
+page.svelte (dylan toth on 11/06/2024 at 21:14):             // Clear obstacle timers
+page.svelte (dylan toth on 11/06/2024 at 21:14):             obstacleTimers.forEach(timer => {
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 console.log('Clearing obstacle timer:', timer);
+page.svelte (dylan toth on 11/06/2024 at 21:14):                 clearInterval(timer);
+page.svelte (dylan toth on 11/06/2024 at 21:14):             });
+page.svelte (dylan toth on 11/06/2024 at 21:14):             obstacleTimers = [];
+page.svelte (dylan toth on 11/06/2024 at 21:14):             // Reset ground animation
+page.svelte (dylan toth on 11/06/2024 at 21:14):             ground.classList.add('ground-moving');
+page.svelte (dylan toth on 11/06/2024 at 21:14):             ground.classList.remove('ground');
+page.svelte (dylan toth on 11/06/2024 at 21:14):             console.log('Ground animation reset.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):             runVinylCount = 0;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         }
+page.svelte (dylan toth on 11/06/2024 at 21:14):         gameStarted = true;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         console.log('Starting game loop.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):         gameTimerId = setInterval(startGameLoop, 20);
+page.svelte (dylan toth on 11/06/2024 at 21:14):         generateObstacle();
+page.svelte (dylan toth on 11/06/2024 at 21:14):         startObstacleGenerator();
+page.svelte (dylan toth on 11/06/2024 at 21:14):         // Add keyup listener when game starts
+page.svelte (dylan toth on 11/06/2024 at 21:14):         window.addEventListener('keyup', control);
+page.svelte (dylan toth on 11/06/2024 at 21:14):         console.log('Keyup event listener added.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):         // Focus the window to ensure it receives key events
+page.svelte (dylan toth on 11/06/2024 at 21:14):         window.focus();
+page.svelte (dylan toth on 11/06/2024 at 21:14):         console.log('Window focused for keyboard events.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     // Game Over Function
+page.svelte (dylan toth on 11/06/2024 at 21:14):     function gameOver() {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         console.log('Game Over triggered.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):         clearInterval(gameTimerId);
+page.svelte (dylan toth on 11/06/2024 at 21:14):         gameStarted = false;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         isGameOver = true;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         message = 'Game Over!';
+page.svelte (dylan toth on 11/06/2024 at 21:14):         window.removeEventListener('keyup', control);
+page.svelte (dylan toth on 11/06/2024 at 21:14):         console.log('Keyup event listener removed.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):         stopObstacleGenerator();
+page.svelte (dylan toth on 11/06/2024 at 21:14):         // Reset ground animation
+page.svelte (dylan toth on 11/06/2024 at 21:14):         ground.classList.add('ground');
+page.svelte (dylan toth on 11/06/2024 at 21:14):         ground.classList.remove('ground-moving');
+page.svelte (dylan toth on 11/06/2024 at 21:14):         console.log('Ground animation stopped.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     // Cleanup on component destroy
+page.svelte (dylan toth on 11/06/2024 at 21:14):     // onDestroy(() => {
+page.svelte (dylan toth on 11/06/2024 at 21:14):     //     console.log('Component is being destroyed. Cleaning up.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):     //     clearInterval(gameTimerId);
+page.svelte (dylan toth on 11/06/2024 at 21:14):     //     obstacleTimers.forEach(timer => {
+page.svelte (dylan toth on 11/06/2024 at 21:14):     //         console.log('Clearing obstacle timer during cleanup:', timer);
+page.svelte (dylan toth on 11/06/2024 at 21:14):     //         clearInterval(timer);
+page.svelte (dylan toth on 11/06/2024 at 21:14):     //     });
+page.svelte (dylan toth on 11/06/2024 at 21:14):     //     obstacleTimers = [];
+page.svelte (dylan toth on 11/06/2024 at 21:14):     //     stopObstacleGenerator();
+page.svelte (dylan toth on 11/06/2024 at 21:14):     //     window.removeEventListener('keyup', control);
+page.svelte (dylan toth on 11/06/2024 at 21:14):     //     console.log('Keyup event listener removed during cleanup.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):     // });
+page.svelte (dylan toth on 11/06/2024 at 21:14):     onMount(async () => {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         console.log('Component mounted. Fetching user.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):         await fetchUser();
+page.svelte (dylan toth on 11/06/2024 at 21:43):         await fetchVinylBalance(user.id);
+page.svelte (dylan toth on 11/06/2024 at 21:14):         // Initialize sound
+page.svelte (dylan toth on 11/06/2024 at 21:14):         // Uncomment and replace with your sound file path if you have one
+page.svelte (dylan toth on 11/06/2024 at 21:14):         // scoreSound = new Audio('/path_to_your_score_sound.mp3'); // Replace with your sound file path
+page.svelte (dylan toth on 11/06/2024 at 21:14):         // console.log('Score sound initialized.');
+page.svelte (dylan toth on 11/06/2024 at 21:14):         // Initialize game elements
+page.svelte (dylan toth on 11/06/2024 at 21:14):         bird = document.querySelector('.bird');
+page.svelte (dylan toth on 11/06/2024 at 21:14):         gameContainer = document.querySelector('.game-container');
+page.svelte (dylan toth on 11/06/2024 at 21:14):         ground = document.querySelector('.ground-moving');
+page.svelte (dylan toth on 11/06/2024 at 21:14):         // Initially position the bird
+page.svelte (dylan toth on 11/06/2024 at 21:14):         bird.style.left = birdLeft + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):         bird.style.bottom = birdBottom + 'px';
+page.svelte (dylan toth on 11/06/2024 at 21:14):         console.log(`Bird initially positioned at Left: ${birdLeft}, Bottom: ${birdBottom}`);
+page.svelte (dylan toth on 11/06/2024 at 21:14):     });
+page.svelte (dylan toth on 11/06/2024 at 21:14): </script>
+page.svelte (dylan toth on 11/06/2024 at 21:14): <!-- Flappy Bird Game Section -->
+page.svelte (dylan toth on 11/06/2024 at 21:14): <div class="flappy-vinyl-game">
+page.svelte (dylan toth on 11/06/2024 at 21:14):     <div class="balance-display">
+page.svelte (dylan toth on 11/06/2024 at 21:14):         {#if user}
+page.svelte (dylan toth on 11/06/2024 at 21:14):             <span class="font-bold">Balance:</span> <span>{balance} Vinyls</span>
+page.svelte (dylan toth on 11/06/2024 at 21:14):         {:else}
+page.svelte (dylan toth on 11/06/2024 at 21:14):             <span>Please log in to see your balance.</span>
+page.svelte (dylan toth on 11/06/2024 at 21:14):         {/if}
+page.svelte (dylan toth on 11/06/2024 at 21:14):     </div>
+page.svelte (dylan toth on 11/06/2024 at 21:14):     <div class="instruction-display">
+page.svelte (dylan toth on 11/06/2024 at 21:14):         Press <strong>Spacebar</strong> to flap
+page.svelte (dylan toth on 11/06/2024 at 21:14):     </div>
+page.svelte (dylan toth on 11/06/2024 at 21:14):     <button
+page.svelte (dylan toth on 11/06/2024 at 21:14):         on:click={startGame}
+page.svelte (dylan toth on 11/06/2024 at 21:14):         class="start-button"
+page.svelte (dylan toth on 11/06/2024 at 21:14):         disabled={gameStarted || !user}
+page.svelte (dylan toth on 11/06/2024 at 21:14):     >
+page.svelte (dylan toth on 11/06/2024 at 21:14):         {isGameOver ? 'Restart Game' : 'Start Game'}
+page.svelte (dylan toth on 11/06/2024 at 21:14):     </button>
+page.svelte (dylan toth on 11/06/2024 at 21:14):     <div class="game-container">
+page.svelte (dylan toth on 11/06/2024 at 21:14):         <div class="border-left"></div>
+page.svelte (dylan toth on 11/06/2024 at 21:14):         <div class="border-top"></div>
+page.svelte (dylan toth on 11/06/2024 at 21:14):         <div class="sky">
+page.svelte (dylan toth on 11/06/2024 at 21:14):             <div class="bird"></div>
+page.svelte (dylan toth on 11/06/2024 at 21:14):         </div>
+page.svelte (dylan toth on 11/06/2024 at 21:14):         <div class="ground-container">
+page.svelte (dylan toth on 11/06/2024 at 21:14):             <div class="ground-moving"></div>
+page.svelte (dylan toth on 11/06/2024 at 21:14):         </div>
+page.svelte (dylan toth on 11/06/2024 at 21:14):         <div class="border-right"></div>
+page.svelte (dylan toth on 11/06/2024 at 21:14):     </div>
+page.svelte (dylan toth on 11/06/2024 at 21:14):     <!-- <div class="message-display">{message}</div> -->
+page.svelte (dylan toth on 11/06/2024 at 21:14):     {#if user}
+page.svelte (dylan toth on 11/06/2024 at 21:14):     <div class="message-display">
+page.svelte (dylan toth on 11/06/2024 at 21:14):         <span class="font-bold">Vinyls This Run:</span> <span>{runVinylCount}</span>
+page.svelte (dylan toth on 11/06/2024 at 21:14):     </div>
+page.svelte (dylan toth on 11/06/2024 at 21:14): {/if}
+page.svelte (dylan toth on 11/06/2024 at 21:14): </div>
+page.svelte (dylan toth on 11/06/2024 at 21:14): <style>
+page.svelte (dylan toth on 11/06/2024 at 21:14):     /* Flappy Bird Game Styles */
+page.svelte (dylan toth on 11/06/2024 at 21:14):     .flappy-vinyl-game {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         display: flex;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         flex-direction: column;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         align-items: center;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         color: #fff;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         margin: 20px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     .balance-display {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         margin-bottom: 10px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         font-size: 1.2em;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     .instruction-display {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         margin-bottom: 10px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         font-size: 1.2em;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     .start-button {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         padding: 10px 20px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         background-color: #1db954;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         color: #fff;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         font-size: 1.2em;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         font-weight: bold;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         border: none;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         border-radius: 5px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         cursor: pointer;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         transition: background-color 0.3s;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         margin-bottom: 20px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     .start-button:hover:not(:disabled) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         background-color: #17a44d;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     .start-button:disabled {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         background-color: #999;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         cursor: not-allowed;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     .game-container {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         width: 500px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         height: 730px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         position: relative;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         background-image: url('/fb-game-background.png'); /* Ensure this path is correct */
+page.svelte (dylan toth on 11/06/2024 at 21:14):         background-size: cover;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         border-radius: 10px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         overflow: hidden;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         box-shadow: 0 0 10px #000;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     /* Make obstacle styles global */
+page.svelte (dylan toth on 11/06/2024 at 21:14):     :global(.obstacle) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         background-image: url('/flappybird-pipe.png'); /* Ensure this path is correct */
+page.svelte (dylan toth on 11/06/2024 at 21:14):         width: 60px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         height: 300px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         position: absolute;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         background-size: cover;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     :global(.topObstacle) {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         background-image: url('/flappybird-pipe.png'); /* Ensure this path is correct */
+page.svelte (dylan toth on 11/06/2024 at 21:14):         transform: rotate(180deg);
+page.svelte (dylan toth on 11/06/2024 at 21:14):         width: 60px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         height: 300px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         position: absolute;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         background-size: cover;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     .border-left {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         width: 80px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         height: 790px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         position: absolute;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         background-color: white;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         z-index: 2;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         left: -80px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         top: 0;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     .border-right {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         width: 80px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         height: 790px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         position: absolute;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         background-color: white;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         z-index: 2;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         right: -80px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         top: 0;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     .border-top {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         width: 660px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         height: 50px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         position: absolute;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         background-color: white;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         z-index: 2;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         top: -50px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         left: -80px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     .sky {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         width: 500px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         height: 580px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         position: absolute;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         top: 0;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         left: 0;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     .bird {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         background-image: url('/flappy-bird.png'); /* Ensure this path is correct */
+page.svelte (dylan toth on 11/06/2024 at 21:14):         position: absolute;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         width: 65px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         height: 55px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         left: 220px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         bottom: 400px; /* Updated from 100px to 400px */
+page.svelte (dylan toth on 11/06/2024 at 21:14):         background-size: cover;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     @keyframes slideright {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         from {
+page.svelte (dylan toth on 11/06/2024 at 21:14):             background-position: 100%;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         }
+page.svelte (dylan toth on 11/06/2024 at 21:14):         to {
+page.svelte (dylan toth on 11/06/2024 at 21:14):             background-position: 0%;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     @-webkit-keyframes slideright {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         from {
+page.svelte (dylan toth on 11/06/2024 at 21:14):             background-position: 100%;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         }
+page.svelte (dylan toth on 11/06/2024 at 21:14):         to {
+page.svelte (dylan toth on 11/06/2024 at 21:14):             background-position: 0%;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     .ground-container {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         height: 150px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         width: 100%;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         position: absolute;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         bottom: 0;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         left: 0;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     .ground-moving {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         position: absolute;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         top: 0;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         height: 150px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         background-image: url('/bottom-background.png'); /* Ensure this path is correct */
+page.svelte (dylan toth on 11/06/2024 at 21:14):         background-repeat: repeat-x;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         animation: slideright 10s infinite linear; /* Adjust animation speed as needed */
+page.svelte (dylan toth on 11/06/2024 at 21:14):         -webkit-animation: slideright 10s infinite linear;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         width: 200%; /* Increased to allow seamless looping */
+page.svelte (dylan toth on 11/06/2024 at 21:14):         z-index: 1;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     .ground {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         /* Styles for static ground after game over */
+page.svelte (dylan toth on 11/06/2024 at 21:14):         background-image: none;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         background-color: #654321; /* Example color */
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     .message-display {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         margin-top: 10px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         color: #ffcc00;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         font-weight: bold;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         font-size: 1.1em;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14):     .multiplier-label {
+page.svelte (dylan toth on 11/06/2024 at 21:14):         position: absolute;
+page.svelte (dylan toth on 11/06/2024 at 21:14):         font-size: 12px;
+page.svelte (dylan toth on 11/06/2024 at 21:14):     }
+page.svelte (dylan toth on 11/06/2024 at 21:14): </style>
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   import { onMount } from "svelte";
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   import {getValidSpotifyAccessToken} from "$lib/utils";
nav.svelte   (dylan toth on 11/06/2024 at 21:43):   import { vinylBalance, fetchVinylBalance, addVinyls } from '$lib/vinylsStore.js';
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   let vinyls = 0;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     if (active == 0) {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       active = 1;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     } else if (active == 1) {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       active = 0;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     return;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       const session = await supabase.auth.getSession();
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       user = session?.data?.session?.user;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       // console.log(user.app_metadata.provider);
nav.svelte   (dylan toth on 11/06/2024 at 21:43):         await fetchVinylBalance(user.id);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         const unsubscribe = vinylBalance.subscribe(value => {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):             vinyls = value;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):           });
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         const { data, error } = await supabase.from("profiles").select("username, spotify_access_token, avatar_url").eq("id", user.id).single();
nav.svelte   (dylan toth on 11/06/2024 at 21:14):         if (data) {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):           // Update login button with username
nav.svelte   (dylan toth on 11/06/2024 at 22:58):           const loginButton = document.getElementById("login-button");
nav.svelte   (dylan toth on 11/06/2024 at 22:58):           loginButton.innerHTML = data.username;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):           avatar_url = data.avatar_url;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):           console.log("data: ", data)
nav.svelte   (dylan toth on 11/06/2024 at 22:58):             return;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):           }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):           else {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):             console.log(user)
nav.svelte   (dylan toth on 11/06/2024 at 22:58):             if (user && user.app_metadata.provider == "spotify") {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):               window.location.href = '/spotify-login';
nav.svelte   (dylan toth on 11/06/2024 at 22:58):             }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       console.error("Error fetching user profile:", error);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       <a href="/"><img src={logo} alt="logo" class="logo"></a>
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         <a 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         href="/" 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         class="nav-link" 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         class:active={$page.url.pathname === "/"}
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       >
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         Home
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       </a>
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       <a 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         href="/discover" 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         class="nav-link" 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         class:active={$page.url.pathname.startsWith("/discover")}
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       >
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         Discover
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       </a>
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       <a 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         href="/charts" 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         class="nav-link" 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         class:active={$page.url.pathname.startsWith("/charts")}
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       >
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         Charts
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       </a>
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         <a href="/discuss" class="nav-link" class:active={$page.url.pathname.startsWith("/discuss")}>
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         <a href="/games" class="nav-link" class:active={$page.url.pathname.startsWith("/games")}>
nav.svelte   (dylan toth on 11/06/2024 at 21:14):           {#if user}
nav.svelte   (dylan toth on 11/06/2024 at 21:14):           <!-- Vinyls Amount Display -->
nav.svelte   (dylan toth on 11/06/2024 at 22:58):           <span class="vinyls-amount">
nav.svelte   (dylan toth on 11/06/2024 at 21:14):             Games ({vinyls} Vinyls)
nav.svelte   (dylan toth on 11/06/2024 at 22:58):           </span>
nav.svelte   (dylan toth on 11/06/2024 at 21:14):           {:else}
nav.svelte   (dylan toth on 11/06/2024 at 21:14):         {/if}
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       <button on:click={authenticateSpotify} class="spotify-button">
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         Connect with Spotify
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       </button>
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       <!-- svelte-ignore a11y-click-events-have-key-events -->
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         <!-- svelte-ignore a11y-no-noninteractive-element-interactions -->
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         <!-- svelte-ignore a11y-click-events-have-key-events -->
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         <!-- svelte-ignore a11y-no-static-element-interactions -->
nav.svelte   (dylan toth on 11/06/2024 at 22:58):         <div class="hamburger {active === 1 ? "is-active" : ""}" id="hamburger" on:click={hamburgerMenu}>
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   <div class="links mobile {active === 1 ? "is-active" : ""}">
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     <button on:click={authenticateSpotify} class="spotify-button-mobile">
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       Connect with Spotify
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     </button>
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     <a 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       href="/" 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       class="nav-link" 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       class:active={$page.url.pathname === "/"}
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     <a 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       href="/discover" 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       class="nav-link" 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       class:active={$page.url.pathname.startsWith("/discover")}
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     <a 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       href="/charts" 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       class="nav-link" 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       class:active={$page.url.pathname.startsWith("/charts")}
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     <a 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       class="nav-link account-link" 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       class:active={$page.url.pathname.startsWith("/account")}
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .mobile {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     position: absolute;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     display: none;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     background-color: #1d1f25;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     width: 100%;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .wrapper {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     width: 100%;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     top: 0;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     z-index: 100;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     background-color: #1d1f25;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   nav {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     display: flex;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     justify-content: space-between;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     padding: 10px;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     border-bottom: 1px solid #26282c;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     align-items: center;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .spotify-button {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     display: flex;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     align-items: center;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     justify-content: center;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     background-color: #1db954; 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     color: white;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     border: none;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     padding: 6px 12px;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     font-size: 1rem;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     font-weight: 600;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     border-radius: 20px; 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     cursor: pointer;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     transition: background-color 0.3s ease, transform 0.2s ease;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     margin-right: 15px;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .spotify-button-mobile {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     display: none;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     background-color: #1db954; 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     color: white;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     border: none;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     padding: 6px 12px;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     font-size: 1rem;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     font-weight: 600;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     max-width: 200px;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     border-radius: 20px; 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     cursor: pointer;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     transition: background-color 0.3s ease, transform 0.2s ease;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     margin-right: 15px;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     margin: 20px 0px 20px 0px;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .avatar {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     height: 50px;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     width: auto;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     border-radius: 50%;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     cursor: pointer;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .hamburger {
nav.svelte   (dylan toth on 11/06/2024 at 21:14):     display: none;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     margin-right: 1rem;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .hamburger:hover{
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     cursor: pointer;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .is-active .line:nth-child(2){
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     opacity: 0;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .is-active .line:nth-child(1){
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     -webkit-transform: translateY(13px) rotate(45deg);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     -ms-transform: translateY(13px) rotate(45deg);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     -o-transform: translateY(13px) rotate(45deg);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     transform: translateY(13px) rotate(45deg);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .is-active .line:nth-child(3){
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     -webkit-transform: translateY(-13px) rotate(-45deg);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     -ms-transform: translateY(-13px) rotate(-45deg);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     -o-transform: translateY(-13px) rotate(-45deg);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     transform: translateY(-13px) rotate(-45deg);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .spotify-button:hover {
nav.svelte   (dylan toth on 11/06/2024 at 21:14):     background-color: #1aa34a;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     transform: scale(1.03); 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .spotify-button:active {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     background-color: #188a3e;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     transform: scale(1); 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .spotify-button:focus {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     outline: none;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     box-shadow: 0 0 0 3px rgba(29, 185, 84, 0.4);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .left-nav,
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .right-nav {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     display: flex;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     align-items: center;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .left-nav {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     gap: 1rem; /* Add space between the logo and the links */
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .nav-link {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     color: #ebe9e5;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     font-size: 1.25rem;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     text-decoration: none;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     margin-left: 1rem;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .nav-link:hover {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     color: #6a6a6a;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .login-wrapper {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     display: flex;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     align-items: center;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .login-href {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     font-size: 1.5rem;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     color: #ebe9e5;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     text-decoration: none;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     padding-right: 20px;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .nav-link.active {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       /* Gradient text color */
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   background: linear-gradient(to right, #fe67c4, #5371fe);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   -webkit-background-clip: text;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   -webkit-text-fill-color: transparent;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   /* For Firefox */
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   background-clip: text;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   color: transparent;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   /* causes bugs */
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   /* .nav-link.active::after {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     content: '';
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     position: absolute;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     width: 100%;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     height: 2px;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     background-color: #1db954; 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     bottom: -5px; 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     left: 0;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   } */
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   .logo {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     width: 50px;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     height: auto;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   @media (max-width: 768px) {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     .nav-link {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       font-size: 1rem;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     .login-href {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       font-size: 1.2rem;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     .avatar {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       width: 40px;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       height: auto;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     .logo {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       width: 40px; 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     .left-nav {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       gap: 0.5rem;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 21:14):   }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):   @media (max-width: 480px) {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     .spotify-button {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       display: none;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     .spotify-button-mobile {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       display: flex;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       align-items: center;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       justify-content: center;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     .spotify-button-mobile:hover {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       background-color: #1aa34a;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       transform: scale(1.03); 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     nav {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       /* flex-direction: ; */
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       text-align: center;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     .nav-link {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       margin: 0.5rem 0; 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     .login-href {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       padding-right: 0; 
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     .avatar {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       margin-right: 10px;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     .hamburger .line{
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       width: 40px;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       height: 5px;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       background-color: #ecf0f1;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       display: block;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       margin: 8px auto;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       -webkit-transition: all 0.3s ease-in-out;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       -o-transition: all 0.3s ease-in-out;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       transition: all 0.3s ease-in-out;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     .left-nav {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       flex-direction: column;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     .links {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       display: none;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     .links.is-active {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       display: flex;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       flex-direction: column;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       padding-left: 2rem;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     .login-href {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       display: none;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     .hamburger {
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       display: block;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     .hamburger:hover{
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       cursor: pointer;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     .hamburger.is-active .line:nth-child(2){
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       opacity: 0;
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     .hamburger.is-active .line:nth-child(1){
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       -webkit-transform: translateY(13px) rotate(45deg);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       -ms-transform: translateY(13px) rotate(45deg);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       -o-transform: translateY(13px) rotate(45deg);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       transform: translateY(13px) rotate(45deg);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     .hamburger.is-active .line:nth-child(3){
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       -webkit-transform: translateY(-13px) rotate(-45deg);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       -ms-transform: translateY(-13px) rotate(-45deg);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       -o-transform: translateY(-13px) rotate(-45deg);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):       transform: translateY(-13px) rotate(-45deg);
nav.svelte   (dylan toth on 11/06/2024 at 22:58):     }
nav.svelte   (dylan toth on 11/06/2024 at 21:14): </style>
+page.svelte (dylan toth on 11/12/2024 at 12:30):   // import { selectedSong } from "$lib/stores";
+page.svelte (dylan toth on 11/12/2024 at 12:30):     // selectedSong.set(middleSong);
vinylsStore.js (dylan toth on 11/06/2024 at 21:43): // src/stores/vinylStore.js
vinylsStore.js (dylan toth on 11/06/2024 at 21:43): import { writable } from 'svelte/store';
vinylsStore.js (dylan toth on 11/06/2024 at 21:43): import { supabase } from '$lib/supabaseClient.js'; // Ensure the path is correct
vinylsStore.js (dylan toth on 11/06/2024 at 21:43): // Initialize the store with a default value
vinylsStore.js (dylan toth on 11/06/2024 at 21:43): export const vinylBalance = writable(0);
vinylsStore.js (dylan toth on 11/06/2024 at 21:43): // Function to fetch the current vinyl balance from Supabase
vinylsStore.js (dylan toth on 11/06/2024 at 21:43): export async function fetchVinylBalance(userId) {
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     const { data, error } = await supabase
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):         .from('profiles')
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):         .select('vinyls')
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):         .eq('id', userId)
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):         .single();
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     if (error) {
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):         console.error('Error fetching vinyl balance:', error);
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):         return;
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     }
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     console.log("setting balance to ", data.vinyls)
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     vinylBalance.set(data.vinyls ?? 0);
vinylsStore.js (dylan toth on 11/06/2024 at 21:43): }
vinylsStore.js (dylan toth on 11/06/2024 at 21:43): // Function to add vinyls
vinylsStore.js (dylan toth on 11/06/2024 at 21:43): export async function addVinyls(userId, amount) {
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     if (!userId) {
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):         console.warn('Cannot add vinyls: User not authenticated.');
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):         return false;
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     }
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     const { error } = await supabase
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):         .rpc('increment_vinyls', { user_id: userId, amount: amount });
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     if (error) {
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):         console.error('Error adding vinyls:', error);
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):         return false;
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     }
vinylsStore.js (dylan toth on 11/06/2024 at 21:43): console.log("incrementing")
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     // Update the store
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     vinylBalance.update(n => n + amount);
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     return true;
vinylsStore.js (dylan toth on 11/06/2024 at 21:43): }
vinylsStore.js (dylan toth on 11/06/2024 at 21:43): // Function to spend vinyls
vinylsStore.js (dylan toth on 11/06/2024 at 21:43): export async function spendVinyls(userId, amount) {
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     // First, check if the user has enough vinyls
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     let currentBalance;
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     vinylBalance.subscribe(value => {
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):         currentBalance = value;
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     })();
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     if (currentBalance < amount) {
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):         console.warn('Insufficient vinyls.');
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):         return false;
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     }
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     // Update the balance in Supabase
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     const { data, error } = await supabase
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):         .from('profiles')
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):         .update({ vinyls: supabase.raw('vinyls - ?', [amount]) })
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):         .eq('id', userId);
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     if (error) {
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):         console.error('Error spending vinyls:', error);
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):         return false;
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     }
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     // Update the store
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     vinylBalance.update(n => n - amount);
vinylsStore.js (dylan toth on 11/06/2024 at 21:43):     return true;
vinylsStore.js (dylan toth on 11/06/2024 at 21:43): }
post.svelte  (dylan toth on 11/07/2024 at 17:19):   export let created_at;
post.svelte  (dylan toth on 11/07/2024 at 17:19):   function timeSince(date) {
post.svelte  (dylan toth on 11/07/2024 at 17:19):     const seconds = Math.floor((new Date() - new Date(date)) / 1000);
post.svelte  (dylan toth on 11/07/2024 at 17:19):     let interval = seconds / 31536000;
post.svelte  (dylan toth on 11/07/2024 at 17:19):     if (interval > 1) {
post.svelte  (dylan toth on 11/07/2024 at 17:19):       return Math.floor(interval) + " years ago";
post.svelte  (dylan toth on 11/07/2024 at 17:19):     }
post.svelte  (dylan toth on 11/07/2024 at 17:19):     interval = seconds / 2592000;
post.svelte  (dylan toth on 11/07/2024 at 17:19):     if (interval > 1) {
post.svelte  (dylan toth on 11/07/2024 at 17:19):       return Math.floor(interval) + " months ago";
post.svelte  (dylan toth on 11/07/2024 at 17:19):     }
post.svelte  (dylan toth on 11/07/2024 at 17:19):     interval = seconds / 86400;
post.svelte  (dylan toth on 11/07/2024 at 17:19):     if (interval > 1) {
post.svelte  (dylan toth on 11/07/2024 at 17:19):       return Math.floor(interval) + " days ago";
post.svelte  (dylan toth on 11/07/2024 at 17:19):     }
post.svelte  (dylan toth on 11/07/2024 at 17:19):     interval = seconds / 3600;
post.svelte  (dylan toth on 11/07/2024 at 17:19):     if (interval > 1) {
post.svelte  (dylan toth on 11/07/2024 at 17:19):       return Math.floor(interval) + " hours ago";
post.svelte  (dylan toth on 11/07/2024 at 17:19):     }
post.svelte  (dylan toth on 11/07/2024 at 17:19):     interval = seconds / 60;
post.svelte  (dylan toth on 11/07/2024 at 17:19):     if (interval > 1) {
post.svelte  (dylan toth on 11/07/2024 at 17:19):       return Math.floor(interval) + " minutes ago";
post.svelte  (dylan toth on 11/07/2024 at 17:19):     }
post.svelte  (dylan toth on 11/07/2024 at 17:19):     return Math.floor(seconds) + " seconds ago";
post.svelte  (dylan toth on 11/07/2024 at 17:19):   }
post.svelte  (dylan toth on 11/07/2024 at 17:19):   function getBarColor(index, filled) {
post.svelte  (dylan toth on 11/07/2024 at 17:19):     const colors = [
post.svelte  (dylan toth on 11/07/2024 at 17:19):       "#023E0000", // muted green
post.svelte  (dylan toth on 11/07/2024 at 17:19):       "#15420000",
post.svelte  (dylan toth on 11/07/2024 at 17:19):       "#27450000",
post.svelte  (dylan toth on 11/07/2024 at 17:19):       "#3A490000",
post.svelte  (dylan toth on 11/07/2024 at 17:19):       "#4C4C0000", // muted yellow
post.svelte  (dylan toth on 11/07/2024 at 17:19):       "#4C3D0000",
post.svelte  (dylan toth on 11/07/2024 at 17:19):       "#4B2E0000",
post.svelte  (dylan toth on 11/07/2024 at 17:19):       "#4B1E0000",
post.svelte  (dylan toth on 11/07/2024 at 17:19):       "#4A0F0000",
post.svelte  (dylan toth on 11/07/2024 at 17:19):       "#4A000000"  // muted red
post.svelte  (dylan toth on 11/07/2024 at 17:19):     ];
post.svelte  (dylan toth on 11/07/2024 at 17:19):     const activeColors = [
post.svelte  (dylan toth on 11/07/2024 at 17:19):       "#0AFF00", // bright green
post.svelte  (dylan toth on 11/07/2024 at 17:19):       "#47FF00",
post.svelte  (dylan toth on 11/07/2024 at 17:19):       "#85FF00",
post.svelte  (dylan toth on 11/07/2024 at 17:19):       "#C2FF00",
post.svelte  (dylan toth on 11/07/2024 at 17:19):       "#FFFF00", // bright yellow
post.svelte  (dylan toth on 11/07/2024 at 17:19):       "#FFCC00",
post.svelte  (dylan toth on 11/07/2024 at 17:19):       "#FF9900",
post.svelte  (dylan toth on 11/07/2024 at 17:19):       "#FF6600",
post.svelte  (dylan toth on 11/07/2024 at 17:19):       "#FF3300",
post.svelte  (dylan toth on 11/07/2024 at 17:19):       "#FF0000"  // bright red
post.svelte  (dylan toth on 11/07/2024 at 17:19):     ];
post.svelte  (dylan toth on 11/07/2024 at 17:19):     return filled ? activeColors[index] : colors[index];
post.svelte  (dylan toth on 11/07/2024 at 17:19):       <p class="time-since-created">{timeSince(created_at) || ""}</p>
post.svelte  (dylan toth on 11/07/2024 at 17:19):         <div class="bar-rating" style="width: 100%;">
post.svelte  (dylan toth on 11/07/2024 at 17:19):           {#each Array(10) as _, i}
post.svelte  (dylan toth on 11/07/2024 at 17:19):             <span id={`bar-${i}`} class="bar" style="background-color: {getBarColor(i, rating > i)};"></span>
post.svelte  (dylan toth on 11/07/2024 at 17:19):           {/each}
post.svelte  (dylan toth on 11/07/2024 at 17:19):         </div>
post.svelte  (dylan toth on 11/07/2024 at 17:19):   .time-since-created {
post.svelte  (dylan toth on 11/07/2024 at 17:19):     font-size: 0.6rem;
post.svelte  (dylan toth on 11/07/2024 at 17:19):     color: #b9b9b9;
post.svelte  (dylan toth on 11/07/2024 at 17:19):     margin-left: 10px;
post.svelte  (dylan toth on 11/07/2024 at 17:19):   }
post.svelte  (dylan toth on 11/07/2024 at 17:19):   .bar-rating {
post.svelte  (dylan toth on 11/07/2024 at 17:19):     display: flex;
post.svelte  (dylan toth on 11/07/2024 at 17:19):     gap: 4px;
post.svelte  (dylan toth on 11/07/2024 at 17:19):     height: 35px;
post.svelte  (dylan toth on 11/07/2024 at 17:19):   }
post.svelte  (dylan toth on 11/07/2024 at 17:19):   .bar-rating .bar {
post.svelte  (dylan toth on 11/07/2024 at 17:19):     display: inline-block;
post.svelte  (dylan toth on 11/07/2024 at 17:19):     width: 6px;
post.svelte  (dylan toth on 11/07/2024 at 17:19):     height: 22px;
post.svelte  (dylan toth on 11/07/2024 at 17:19):     background-color: transparent;
post.svelte  (dylan toth on 11/07/2024 at 17:19):   }
post.svelte  (dylan toth on 11/07/2024 at 17:19):     width: 80%;
stores.js    (dylan toth on 11/12/2024 at 12:30): // export const selectedSong = writable(null);
+page.svelte (dylan toth on 11/07/2024 at 17:19):   function getBarColor(index, filled) {
+page.svelte (dylan toth on 11/07/2024 at 17:19):     const colors = [
+page.svelte (dylan toth on 11/07/2024 at 17:19):       "#023E0000", // muted green
+page.svelte (dylan toth on 11/07/2024 at 17:19):       "#15420000",
+page.svelte (dylan toth on 11/07/2024 at 17:19):       "#27450000",
+page.svelte (dylan toth on 11/07/2024 at 17:19):       "#3A490000",
+page.svelte (dylan toth on 11/07/2024 at 17:19):       "#4C4C0000", // muted yellow
+page.svelte (dylan toth on 11/07/2024 at 17:19):       "#4C3D0000",
+page.svelte (dylan toth on 11/07/2024 at 17:19):       "#4B2E0000",
+page.svelte (dylan toth on 11/07/2024 at 17:19):       "#4B1E0000",
+page.svelte (dylan toth on 11/07/2024 at 17:19):       "#4A0F0000",
+page.svelte (dylan toth on 11/07/2024 at 17:19):       "#4A000000"  // muted red
+page.svelte (dylan toth on 11/07/2024 at 17:19):     ];
+page.svelte (dylan toth on 11/07/2024 at 17:19):     const activeColors = [
+page.svelte (dylan toth on 11/07/2024 at 17:19):       "#0AFF00", // bright green
+page.svelte (dylan toth on 11/07/2024 at 17:19):       "#47FF00",
+page.svelte (dylan toth on 11/07/2024 at 17:19):       "#85FF00",
+page.svelte (dylan toth on 11/07/2024 at 17:19):       "#C2FF00",
+page.svelte (dylan toth on 11/07/2024 at 17:19):       "#FFFF00", // bright yellow
+page.svelte (dylan toth on 11/07/2024 at 17:19):       "#FFCC00",
+page.svelte (dylan toth on 11/07/2024 at 17:19):       "#FF9900",
+page.svelte (dylan toth on 11/07/2024 at 17:19):       "#FF6600",
+page.svelte (dylan toth on 11/07/2024 at 17:19):       "#FF3300",
+page.svelte (dylan toth on 11/07/2024 at 17:19):       "#FF0000"  // bright red
+page.svelte (dylan toth on 11/07/2024 at 17:19):     ];
+page.svelte (dylan toth on 11/07/2024 at 17:19):     return filled ? activeColors[index] : colors[index];
+page.svelte (dylan toth on 11/07/2024 at 17:19):   }
+page.svelte (dylan toth on 11/07/2024 at 17:19):       <div class="bar-rating" style="width: 100%;">
+page.svelte (dylan toth on 11/07/2024 at 17:19):         {#each Array(10) as _, i}
+page.svelte (dylan toth on 11/07/2024 at 17:19):           <span id={`bar-${i}`} class="bar" style="background-color: {getBarColor(i, post.rating > i)};"></span>
+page.svelte (dylan toth on 11/07/2024 at 17:19):         {/each}
+page.svelte (dylan toth on 11/07/2024 at 17:19):       </div>
+page.svelte (dylan toth on 11/07/2024 at 17:19):   .bar-rating {
+page.svelte (dylan toth on 11/07/2024 at 17:19):     display: flex;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     gap: 7px;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     height: 35px;
+page.svelte (dylan toth on 11/07/2024 at 17:19):   }
+page.svelte (dylan toth on 11/07/2024 at 17:19):   .bar-rating .bar {
+page.svelte (dylan toth on 11/07/2024 at 17:19):     display: inline-block;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     width: 14px;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     height: 34px;
+page.svelte (dylan toth on 11/07/2024 at 17:19):     background-color: transparent;
+page.svelte (dylan toth on 11/07/2024 at 17:19):   }
addPost.svelte (dylan toth on 11/12/2024 at 12:30):   // import { selectedSong } from "$lib/stores";
addPost.svelte (dylan toth on 11/12/2024 at 12:30):   // const unsubscribe = selectedSong.subscribe((song) => {
addPost.svelte (dylan toth on 11/12/2024 at 12:30):   //   if (song) {
addPost.svelte (dylan toth on 11/12/2024 at 12:30):   //     localSelectedTrack = {
addPost.svelte (dylan toth on 11/12/2024 at 12:30):   //       id: song.id,
addPost.svelte (dylan toth on 11/12/2024 at 12:30):   //       title: song.title,
addPost.svelte (dylan toth on 11/12/2024 at 12:30):   //       artist: song.artist,
addPost.svelte (dylan toth on 11/12/2024 at 12:30):   //       cover: song.cover,
addPost.svelte (dylan toth on 11/12/2024 at 12:30):   //     };
addPost.svelte (dylan toth on 11/12/2024 at 12:30):   //   }
addPost.svelte (dylan toth on 11/12/2024 at 12:30):   // });
addPost.svelte (dylan toth on 11/07/2024 at 17:19):   function updateRating(barID){
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     rating = (barID+1);
addPost.svelte (dylan toth on 11/07/2024 at 17:19):   function getBarColor(index, filled) {
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     const colors = [
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#023E00", // muted green
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#154200",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#274500",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#3A4900",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#4C4C00", // muted yellow
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#4C3D00",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#4B2E00",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#4B1E00",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#4A0F00",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#4A0000"  // muted red
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     ];
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     const activeColors = [
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#0AFF00", // bright green
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#47FF00",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#85FF00",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#C2FF00",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#FFFF00", // bright yellow
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#FFCC00",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#FF9900",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#FF6600",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#FF3300",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#FF0000"  // bright red
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     ];
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     return filled ? activeColors[index] : colors[index];
addPost.svelte (dylan toth on 11/07/2024 at 17:19):   }
addPost.svelte (dylan toth on 11/07/2024 at 17:19):   function getHoverColor(index, filled) {
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     const hoverColors = [
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#069F00", // slightly darker muted green
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#34A700",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#63AF00",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#91B700",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#BFBF00", // slightly darker muted yellow
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#B79900",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#AF7300",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#A64C00",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#9E2600",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#960000"  // slightly darker muted red
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     ];
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     const activeHoverColors = [
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#0AFF00", // bright green
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#47FF00",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#85FF00",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#C2FF00",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#FFFF00", // bright yellow
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#FFCC00",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#FF9900",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#FF6600",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#FF3300",
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       "#FF0000"  // bright red
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     ];
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     return filled ? activeHoverColors[index] : hoverColors[index];
addPost.svelte (dylan toth on 11/07/2024 at 17:19):   }
addPost.svelte (dylan toth on 11/07/2024 at 17:19):   function handleMouseOver(index) {
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     for (let i = 0; i <= index; i++) {
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       document.getElementById(`bar-${i}`).style.backgroundColor = getHoverColor(i, rating > i);
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     }
addPost.svelte (dylan toth on 11/07/2024 at 17:19):   }
addPost.svelte (dylan toth on 11/07/2024 at 17:19):   function handleMouseOut(index) {
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     for (let i = 0; i <= index; i++) {
addPost.svelte (dylan toth on 11/07/2024 at 17:19):       document.getElementById(`bar-${i}`).style.backgroundColor = getBarColor(i, rating > i);
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     }
addPost.svelte (dylan toth on 11/07/2024 at 17:19):   }
addPost.svelte (dylan toth on 11/07/2024 at 17:19):             <div class="bar-rating">
addPost.svelte (dylan toth on 11/07/2024 at 17:19):               {#each Array(10) as _, i}
addPost.svelte (dylan toth on 11/07/2024 at 17:19):                 <span id={`bar-${i}`} class="bar" on:click={() => updateRating(i)} class:filled={rating > i} style="background-color: {getBarColor(i, rating > i)};" on:mouseover={() => handleMouseOver(i)} on:mouseout={() => handleMouseOut(i)}></span>
addPost.svelte (dylan toth on 11/07/2024 at 17:19):   .bar-rating {
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     height: 35px;
addPost.svelte (dylan toth on 11/07/2024 at 17:19):   .bar {
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     display: inline-block;
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     width: 15px;
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     height: 35px;
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     background-color: transparent;
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     cursor: pointer;
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     transition: background-color 0.2s;
addPost.svelte (dylan toth on 11/07/2024 at 17:19):   .bar.filled {
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     background-color: currentColor;
addPost.svelte (dylan toth on 11/07/2024 at 17:19):   .bar:hover {
addPost.svelte (dylan toth on 11/07/2024 at 17:19):     background-color: var(--hover-color);
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14): document.addEventListener('DOMContentLoaded' , () => {
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):     const bird = document.querySelector('.bird')
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):     const gameDisplay = document.querySelector('.game-container')
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):     const ground = document.querySelector('.ground-moving')
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):     let birdLeft = 220
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):     let birdBottom = 100
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):     let gravity = 3
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):     let isGameOver = false
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):     let gap = 430
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):     function startGame() {
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         birdBottom -= gravity
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         bird.style.bottom = birdBottom + 'px'
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         bird.style.left = birdLeft + 'px'
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):     }
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):     let gameTimerId = setInterval(startGame, 20)
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):     function control(e) {
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         if (e.keyCode === 32) {
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):             jump()
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         }
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):     }
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):     function jump() {
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         if (birdBottom < 500) birdBottom += 50
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         bird.style.bottom = birdBottom + 'px'
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         console.log(birdBottom)
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):     }
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):     document.addEventListener('keyup', control)
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):     function generateObstacle() {
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         let obstacleLeft = 500
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         let randomHeight = Math.random() * 60
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         let obstacleBottom = randomHeight
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         const obstacle = document.createElement('div')
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         const topObstacle = document.createElement('div')
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         if (!isGameOver) {
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):             obstacle.classList.add('obstacle')
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):             topObstacle.classList.add('topObstacle')
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         }
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         gameDisplay.appendChild(obstacle)
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         gameDisplay.appendChild(topObstacle)
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         obstacle.style.left = obstacleLeft + 'px'
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         topObstacle.style.left = obstacleLeft + 'px'
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         obstacle.style.bottom = obstacleBottom + 'px'
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         topObstacle.style.bottom = obstacleBottom + gap + 'px'
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         function moveObstacle() {
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):             obstacleLeft -=2
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):             obstacle.style.left = obstacleLeft + 'px'
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):             topObstacle.style.left = obstacleLeft + 'px'
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):             if (obstacleLeft === -60) {
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):                 clearInterval(timerId)
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):                 gameDisplay.removeChild(obstacle)
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):                 gameDisplay.removeChild(topObstacle)
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):             }
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):             if (
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):                 obstacleLeft > 200 && obstacleLeft < 280 && birdLeft === 220 &&
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):                 (birdBottom < obstacleBottom + 153 || birdBottom > obstacleBottom + gap -200)||
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):                 birdBottom === 0 
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):                 ) {
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):                 gameOver()
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):                 clearInterval(timerId)
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):             }
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         }
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         let timerId = setInterval(moveObstacle, 20) 
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         if (!isGameOver) setTimeout(generateObstacle, 3000)
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):     }
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):     generateObstacle()
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):     function gameOver() {
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         clearInterval(gameTimerId)
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         console.log('game over')
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         isGameOver = true
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         document.removeEventListener('keyup', control)
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         ground.classList.add('ground')
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):         ground.classList.remove('ground-moving')
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14):     }
flappyvinyl.js (dylan toth on 11/06/2024 at 21:14): })
